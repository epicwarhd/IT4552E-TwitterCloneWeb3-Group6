{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport Addbar from \"./Addbar\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon, Modal } from \"web3uikit\";\nimport Web3 from 'web3';\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile,\n    ethAddress,\n    search,\n    searchText,\n    detail,\n    id,\n    comment,\n    owner\n  } = _ref;\n  const initialState = [];\n  const [tweets, setTweets] = useState([]);\n  const [stars, setStars] = useState([]);\n  const [color, setColor] = useState([]);\n  const [account, setAccount] = useState();\n  const [visible, setVisible] = useState(false);\n  const [selectedTweet, setSelectedTweet] = useState();\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  useEffect(() => {\n    async function loadTweetFeed() {\n      const counter = await contractList.methods.getCounter().call();\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n\n      for (var i = 0; i < counter; i++) {\n        const tweet = await contractList.methods.getTweetwithInfo(i).call();\n\n        if (tweet[7] === true) {\n          continue;\n        }\n\n        const stars = await contractList.methods.getStar(i).call(); // const starred = await contractList.methods.whoStar(i).send({from: accounts[0]})\n\n        let star = parseInt(stars);\n        setTweets(tweets => [...tweets, tweet]);\n        setStars(stars => [...stars, star]); // if(starred === true) {\n        //   setColor((color) => [...color, \"#ff1493\"])\n        // } else {\n        //   setColor((color) => [...color, \"#3f3f3f\"])\n        // }\n      }\n    }\n\n    async function loadTweetProfile() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const tweetIdList = await contractList.methods.getUserTweet(ethAddress).call();\n      setTweets(initialState);\n      setStars(initialState);\n\n      for (var i = 0; i < tweetIdList[1]; i++) {\n        const tweet = await contractList.methods.getTweetwithInfo(tweetIdList[0][i]).call();\n\n        if (tweet[7] === true) {\n          continue;\n        }\n\n        const stars = await contractList.methods.getStar(tweetIdList[0][i]).call();\n        let star = parseInt(stars);\n        setTweets(tweets => [...tweets, tweet]);\n        setStars(stars => [...stars, star]);\n      }\n    }\n\n    async function loadTweetSearch() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const tweetIdList = await contractList.methods.searchTweet(searchText).call();\n      setTweets(initialState);\n      setStars(initialState);\n\n      for (var i = 0; i < tweetIdList[1]; i++) {\n        const tweet = await contractList.methods.getTweetwithInfo(tweetIdList[0][i]).call();\n\n        if (tweet[7] === true) {\n          continue;\n        }\n\n        const stars = await contractList.methods.getStar(tweetIdList[0][i]).call();\n        let star = parseInt(stars);\n        setTweets(tweets => [...tweets, tweet]);\n        setStars(stars => [...stars, star]);\n      }\n    }\n\n    async function loadTweetDetail() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      setTweets(initialState);\n      setStars(initialState);\n      const tweet = await contractList.methods.getTweetwithInfo(id).call();\n      const stars = await contractList.methods.getStar(id).call();\n      let star = parseInt(stars);\n      setTweets(tweets => [...tweets, tweet]);\n      setStars(stars => [...stars, star]);\n    }\n\n    async function loadComment() {\n      // const comments = await contractList.methods.getTweetwithInfo(id).call();\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      setTweets(initialState);\n      setStars(initialState);\n      const tweet = await contractList.methods.getTweetwithInfo(owner).call();\n\n      for (let i = 0; i < tweet[8].length; i++) {\n        const comment = await contractList.methods.getTweetwithInfo(tweet[8][i]).call();\n        const stars = await contractList.methods.getStar(tweet[8][i]).call();\n        let star = parseInt(stars);\n        setTweets(tweets => [...tweets, comment]);\n        setStars(stars => [...stars, star]);\n      }\n    }\n\n    if (profile === false) {\n      loadTweetFeed();\n    } else if (detail === true) {\n      loadTweetDetail();\n    } else if (search === true) {\n      loadTweetSearch();\n    } else if (profile === true) {\n      loadTweetProfile();\n    } else if (comment === true) {\n      loadComment();\n    }\n  }, [ethAddress, searchText, id, owner]);\n\n  const onClickStar = async (index, id) => {\n    var whoStar = await contractList.methods.whoStar(id).call({\n      from: account\n    });\n\n    if (whoStar === false) {\n      await contractList.methods.star(id).send({\n        from: account\n      });\n      let tmpStars = [...stars];\n      tmpStars[index] += 1;\n      setStars(tmpStars);\n    } else {\n      await contractList.methods.unStar(id).send({\n        from: account\n      });\n      let tmpStars = [...stars];\n      tmpStars[index] -= 1;\n      setStars(tmpStars);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweets.map((tweet, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/profile/${tweet[2]}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: (tweet === null || tweet === void 0 ? void 0 : tweet[6]) === \"\" ? defaultImgs[0] : tweet === null || tweet === void 0 ? void 0 : tweet[6],\n              className: \"profilePic\",\n              alt: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: [(tweet === null || tweet === void 0 ? void 0 : tweet[5]) === \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"No name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 42\n              }, this) : tweet === null || tweet === void 0 ? void 0 : tweet[5], /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${tweet[2].slice(0, 4)}...${tweet[2].slice(38)} Â·\n\n                            ${tweet[4]}\n                            `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [tweet[0], tweet[1] !== \"No Img\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tweet[1],\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 27\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), (tweet === null || tweet === void 0 ? void 0 : tweet[10]) >= 0 ? /*#__PURE__*/_jsxDEV(TweetInFeed, {\n              detail: true,\n              id: tweet === null || tweet === void 0 ? void 0 : tweet[10]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 39\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/comment/${tweet[9]}`,\n                className: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"interactionNums\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    fill: \"#3f3f3f\",\n                    size: 20,\n                    svg: \"messageCircle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), tweet === null || tweet === void 0 ? void 0 : tweet[8].length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                onClick: e => {\n                  onClickStar(index, tweet === null || tweet === void 0 ? void 0 : tweet[9]);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 23\n                }, this), stars[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                onClick: e => {\n                  setSelectedTweet(tweet === null || tweet === void 0 ? void 0 : tweet[9]);\n                  setVisible(true);\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), selectedTweet && /*#__PURE__*/_jsxDEV(Modal, {\n            onCloseButtonPressed: () => setVisible(false),\n            isVisible: visible,\n            hasFooter: false,\n            width: \"700px\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Retweet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal\",\n              children: /*#__PURE__*/_jsxDEV(Addbar, {\n                retweet: true,\n                id: tweet === null || tweet === void 0 ? void 0 : tweet[9]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"HV9CC2hqQkqqIQwLEhiwlUIjaDo=\");\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","Addbar","defaultImgs","Icon","Modal","Web3","useEffect","useState","Link","CONTRACT_ABI","CONTRACT_ADDRESS","TweetInFeed","profile","ethAddress","search","searchText","detail","id","comment","owner","initialState","tweets","setTweets","stars","setStars","color","setColor","account","setAccount","visible","setVisible","selectedTweet","setSelectedTweet","web3","givenProvider","contractList","eth","Contract","loadTweetFeed","counter","methods","getCounter","call","accounts","requestAccounts","i","tweet","getTweetwithInfo","getStar","star","parseInt","loadTweetProfile","tweetIdList","getUserTweet","loadTweetSearch","searchTweet","loadTweetDetail","loadComment","length","onClickStar","index","whoStar","from","send","tmpStars","unStar","map","slice","e","reverse"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,WAA5B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,WAA/C;;;;AAEA,MAAMC,WAAW,GAAG,QAA2E;AAAA;;AAAA,MAA1E;AAACC,IAAAA,OAAD;AAAUC,IAAAA,UAAV;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,UAA9B;AAA0CC,IAAAA,MAA1C;AAAkDC,IAAAA,EAAlD;AAAsDC,IAAAA,OAAtD;AAA+DC,IAAAA;AAA/D,GAA0E;AAE7F,QAAMC,YAAY,GAAG,EAArB;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,EAAtC;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACwB,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,EAAlD;AACA,QAAM0B,IAAI,GAAG,IAAI5B,IAAJ,CAASA,IAAI,CAAC6B,aAAL,IAAsB,uBAA/B,CAAb;AACA,QAAMC,YAAY,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsB5B,YAAtB,EAAoCC,gBAApC,CAArB;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAegC,aAAf,GAA+B;AAC7B,YAAMC,OAAO,GAAG,MAAMJ,YAAY,CAACK,OAAb,CAAqBC,UAArB,GAAkCC,IAAlC,EAAtB;AACA,YAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACG,GAAL,CAASQ,eAAT,EAAvB;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAV;;AAEA,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,OAAd,EAAsBM,CAAC,EAAvB,EAA2B;AACzB,cAAMC,KAAK,GAAG,MAAMX,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsCF,CAAtC,EAAyCH,IAAzC,EAApB;;AACA,YAAGI,KAAK,CAAC,CAAD,CAAL,KAAa,IAAhB,EAAsB;AACpB;AACD;;AACD,cAAMvB,KAAK,GAAG,MAAMY,YAAY,CAACK,OAAb,CAAqBQ,OAArB,CAA6BH,CAA7B,EAAgCH,IAAhC,EAApB,CALyB,CAMzB;;AACA,YAAIO,IAAI,GAAGC,QAAQ,CAAC3B,KAAD,CAAnB;AACAD,QAAAA,SAAS,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYyB,KAAZ,CAAb,CAAT;AACAtB,QAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAU0B,IAAV,CAAZ,CAAR,CATyB,CAUzB;AACA;AACA;AACA;AACA;AACD;AACF;;AAED,mBAAeE,gBAAf,GAAkC;AAChC,YAAMR,QAAQ,GAAG,MAAMV,IAAI,CAACG,GAAL,CAASQ,eAAT,EAAvB;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA,YAAMS,WAAW,GAAG,MAAMjB,YAAY,CAACK,OAAb,CAAqBa,YAArB,CAAkCxC,UAAlC,EAA8C6B,IAA9C,EAA1B;AACApB,MAAAA,SAAS,CAACF,YAAD,CAAT;AACAI,MAAAA,QAAQ,CAACJ,YAAD,CAAR;;AAEA,WAAI,IAAIyB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,WAAW,CAAC,CAAD,CAAzB,EAA6BP,CAAC,EAA9B,EAAkC;AAChC,cAAMC,KAAK,GAAG,MAAMX,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsCK,WAAW,CAAC,CAAD,CAAX,CAAeP,CAAf,CAAtC,EAAyDH,IAAzD,EAApB;;AACA,YAAGI,KAAK,CAAC,CAAD,CAAL,KAAa,IAAhB,EAAsB;AACpB;AACD;;AACD,cAAMvB,KAAK,GAAG,MAAMY,YAAY,CAACK,OAAb,CAAqBQ,OAArB,CAA6BI,WAAW,CAAC,CAAD,CAAX,CAAeP,CAAf,CAA7B,EAAgDH,IAAhD,EAApB;AACA,YAAIO,IAAI,GAAGC,QAAQ,CAAC3B,KAAD,CAAnB;AACAD,QAAAA,SAAS,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYyB,KAAZ,CAAb,CAAT;AACAtB,QAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAU0B,IAAV,CAAZ,CAAR;AAED;AACF;;AAED,mBAAeK,eAAf,GAAiC;AAE/B,YAAMX,QAAQ,GAAG,MAAMV,IAAI,CAACG,GAAL,CAASQ,eAAT,EAAvB;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA,YAAMS,WAAW,GAAG,MAAMjB,YAAY,CAACK,OAAb,CAAqBe,WAArB,CAAiCxC,UAAjC,EAA6C2B,IAA7C,EAA1B;AACApB,MAAAA,SAAS,CAACF,YAAD,CAAT;AACAI,MAAAA,QAAQ,CAACJ,YAAD,CAAR;;AAEA,WAAI,IAAIyB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACO,WAAW,CAAC,CAAD,CAAzB,EAA6BP,CAAC,EAA9B,EAAkC;AAChC,cAAMC,KAAK,GAAG,MAAMX,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsCK,WAAW,CAAC,CAAD,CAAX,CAAeP,CAAf,CAAtC,EAAyDH,IAAzD,EAApB;;AACA,YAAGI,KAAK,CAAC,CAAD,CAAL,KAAa,IAAhB,EAAsB;AACpB;AACD;;AACD,cAAMvB,KAAK,GAAG,MAAMY,YAAY,CAACK,OAAb,CAAqBQ,OAArB,CAA6BI,WAAW,CAAC,CAAD,CAAX,CAAeP,CAAf,CAA7B,EAAgDH,IAAhD,EAApB;AACA,YAAIO,IAAI,GAAGC,QAAQ,CAAC3B,KAAD,CAAnB;AACAD,QAAAA,SAAS,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYyB,KAAZ,CAAb,CAAT;AACAtB,QAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAU0B,IAAV,CAAZ,CAAR;AAED;AAEF;;AAED,mBAAeO,eAAf,GAAiC;AAE/B,YAAMb,QAAQ,GAAG,MAAMV,IAAI,CAACG,GAAL,CAASQ,eAAT,EAAvB;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAV;AACArB,MAAAA,SAAS,CAACF,YAAD,CAAT;AACAI,MAAAA,QAAQ,CAACJ,YAAD,CAAR;AAEA,YAAM0B,KAAK,GAAG,MAAMX,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsC9B,EAAtC,EAA0CyB,IAA1C,EAApB;AACA,YAAMnB,KAAK,GAAG,MAAMY,YAAY,CAACK,OAAb,CAAqBQ,OAArB,CAA6B/B,EAA7B,EAAiCyB,IAAjC,EAApB;AACA,UAAIO,IAAI,GAAGC,QAAQ,CAAC3B,KAAD,CAAnB;AACAD,MAAAA,SAAS,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYyB,KAAZ,CAAb,CAAT;AACAtB,MAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAU0B,IAAV,CAAZ,CAAR;AACD;;AAED,mBAAeQ,WAAf,GAA6B;AAC3B;AAEA,YAAMd,QAAQ,GAAG,MAAMV,IAAI,CAACG,GAAL,CAASQ,eAAT,EAAvB;AACAhB,MAAAA,UAAU,CAACe,QAAQ,CAAC,CAAD,CAAT,CAAV;AAEArB,MAAAA,SAAS,CAACF,YAAD,CAAT;AACAI,MAAAA,QAAQ,CAACJ,YAAD,CAAR;AAEA,YAAM0B,KAAK,GAAG,MAAMX,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsC5B,KAAtC,EAA6CuB,IAA7C,EAApB;;AACA,WAAI,IAAIG,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACC,KAAK,CAAC,CAAD,CAAL,CAASY,MAAvB,EAA8Bb,CAAC,EAA/B,EAAmC;AACjC,cAAM3B,OAAO,GAAG,MAAMiB,YAAY,CAACK,OAAb,CAAqBO,gBAArB,CAAsCD,KAAK,CAAC,CAAD,CAAL,CAASD,CAAT,CAAtC,EAAmDH,IAAnD,EAAtB;AACA,cAAMnB,KAAK,GAAG,MAAMY,YAAY,CAACK,OAAb,CAAqBQ,OAArB,CAA6BF,KAAK,CAAC,CAAD,CAAL,CAASD,CAAT,CAA7B,EAA0CH,IAA1C,EAApB;AAEA,YAAIO,IAAI,GAAGC,QAAQ,CAAC3B,KAAD,CAAnB;AACAD,QAAAA,SAAS,CAAED,MAAD,IAAY,CAAC,GAAGA,MAAJ,EAAYH,OAAZ,CAAb,CAAT;AACAM,QAAAA,QAAQ,CAAED,KAAD,IAAW,CAAC,GAAGA,KAAJ,EAAU0B,IAAV,CAAZ,CAAR;AACD;AAEF;;AAGD,QAAGrC,OAAO,KAAK,KAAf,EAAsB;AACpB0B,MAAAA,aAAa;AAEd,KAHD,MAGO,IAAItB,MAAM,KAAK,IAAf,EAAqB;AAC1BwC,MAAAA,eAAe;AAChB,KAFM,MAGF,IAAI1C,MAAM,KAAK,IAAf,EAAqB;AACxBwC,MAAAA,eAAe;AAChB,KAFI,MAGA,IAAG1C,OAAO,KAAK,IAAf,EAAqB;AACxBuC,MAAAA,gBAAgB;AACjB,KAFI,MAEE,IAAGjC,OAAO,KAAK,IAAf,EAAqB;AAC1BuC,MAAAA,WAAW;AACZ;AAEF,GArHQ,EAqHN,CAAC5C,UAAD,EAAaE,UAAb,EAAyBE,EAAzB,EAA6BE,KAA7B,CArHM,CAAT;;AAwHA,QAAMwC,WAAW,GAAK,OAAOC,KAAP,EAAc3C,EAAd,KAAqB;AAEzC,QAAI4C,OAAO,GAAG,MAAM1B,YAAY,CAACK,OAAb,CAAqBqB,OAArB,CAA6B5C,EAA7B,EAAiCyB,IAAjC,CAAsC;AAACoB,MAAAA,IAAI,EAAEnC;AAAP,KAAtC,CAApB;;AAEA,QAAIkC,OAAO,KAAK,KAAhB,EAAuB;AACrB,YAAM1B,YAAY,CAACK,OAAb,CAAqBS,IAArB,CAA0BhC,EAA1B,EAA8B8C,IAA9B,CAAmC;AAACD,QAAAA,IAAI,EAAEnC;AAAP,OAAnC,CAAN;AAEA,UAAIqC,QAAQ,GAAG,CAAC,GAAGzC,KAAJ,CAAf;AACAyC,MAAAA,QAAQ,CAACJ,KAAD,CAAR,IAAmB,CAAnB;AACApC,MAAAA,QAAQ,CAACwC,QAAD,CAAR;AACD,KAND,MAMO;AACL,YAAM7B,YAAY,CAACK,OAAb,CAAqByB,MAArB,CAA4BhD,EAA5B,EAAgC8C,IAAhC,CAAqC;AAACD,QAAAA,IAAI,EAAEnC;AAAP,OAArC,CAAN;AAEA,UAAIqC,QAAQ,GAAG,CAAC,GAAGzC,KAAJ,CAAf;AACAyC,MAAAA,QAAQ,CAACJ,KAAD,CAAR,IAAmB,CAAnB;AACApC,MAAAA,QAAQ,CAACwC,QAAD,CAAR;AACD;AAEF,GAlBD;;AAoBA,sBAEE;AAAA,cACG3C,MAAM,CAAC6C,GAAP,CAAW,CAACpB,KAAD,EAAQc,KAAR,KAAkB;AAC1B,0BACE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWd,KAAK,CAAC,CAAD,CAAI,EAA/B;AAAkC,YAAA,SAAS,EAAC,MAA5C;AAAA,mCACE;AAAK,cAAA,GAAG,EAAE,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAG,CAAH,CAAL,MAAe,EAAf,GAAoB5C,WAAW,CAAC,CAAD,CAA/B,GAAqC4C,KAArC,aAAqCA,KAArC,uBAAqCA,KAAK,CAAG,CAAH,CAApD;AAA2D,cAAA,SAAS,EAAC,YAArE;AAAkF,cAAA,GAAG,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,yBACG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAG,CAAH,CAAL,MAAe,EAAf,gBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB,GAAyCA,KAAzC,aAAyCA,KAAzC,uBAAyCA,KAAK,CAAG,CAAH,CADjD,eAEI;AAAK,gBAAA,SAAS,EAAC,SAAf;AAAA,0BACO,GAAEA,KAAK,CAAC,CAAD,CAAL,CAASqB,KAAT,CAAe,CAAf,EAAkB,CAAlB,CAAqB,MAAKrB,KAAK,CAAC,CAAD,CAAL,CAASqB,KAAT,CAAe,EAAf,CAAmB;AAC5E;AACA,8BAA8BrB,KAAK,CAAC,CAAD,CAAI;AACvC;AAJsB;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,yBACCA,KAAK,CAAC,CAAD,CADN,EAECA,KAAK,CAAC,CAAD,CAAL,KAAa,QAAb,gBACO;AACE,gBAAA,GAAG,EAAEA,KAAK,CAAC,CAAD,CADZ;AAEE,gBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,sBADP,GAKS,IAPV;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,EAoBG,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAG,EAAH,CAAL,KAAe,CAAf,gBAAmB,QAAC,WAAD;AAAa,cAAA,MAAM,EAAE,IAArB;AAA2B,cAAA,EAAE,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAG,EAAH;AAApC;AAAA;AAAA;AAAA;AAAA,oBAAnB,GAAmE,IApBtE,eAsBE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWA,KAAK,CAAC,CAAD,CAAI,EAA/B;AAAkC,gBAAA,SAAS,EAAC,MAA5C;AAAA,uCACA;AAAK,kBAAA,SAAS,EAAC,iBAAf;AAAA,0CACE,QAAC,IAAD;AAAM,oBAAA,IAAI,EAAC,SAAX;AAAqB,oBAAA,IAAI,EAAE,EAA3B;AAA+B,oBAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGA,KAFH,aAEGA,KAFH,uBAEGA,KAAK,CAAG,CAAH,CAAL,CAAWY,MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAiC,gBAAA,OAAO,EAAGU,CAAD,IAAO;AAACT,kBAAAA,WAAW,CAACC,KAAD,EAAQd,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAG,CAAH,CAAb,CAAX;AAA+B,iBAAjF;AAAA,wCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC,SAAX;AAAqB,kBAAA,IAAI,EAAE,EAA3B;AAA+B,kBAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,wBADF,EAEGvB,KAAK,CAACqC,KAAD,CAFR;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAWE;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAiC,gBAAA,OAAO,EAAEQ,CAAC,IAAI;AAC7CpC,kBAAAA,gBAAgB,CAACc,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAG,CAAH,CAAN,CAAhB;AACAhB,kBAAAA,UAAU,CAAC,IAAD,CAAV;AAAkB,iBAFpB;AAAA,uCAGE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC,SAAX;AAAqB,kBAAA,IAAI,EAAE,EAA3B;AAA+B,kBAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EA6CGC,aAAa,iBAEd,QAAC,KAAD;AAAO,YAAA,oBAAoB,EAAE,MAAMD,UAAU,CAAC,KAAD,CAA7C;AACM,YAAA,SAAS,EAAED,OADjB;AAEM,YAAA,SAAS,EAAE,KAFjB;AAGM,YAAA,KAAK,EAAC,OAHZ;AAAA,oCAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAE,IAAjB;AAAuB,gBAAA,EAAE,EAAEiB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAG,CAAH;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA/CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,uBADF;AAgED,KAjEF,EAkECuB,OAlED;AADH,mBAFF;AAwED,CAnOD;;GAAM1D,W;;KAAAA,W;AAqON,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport Addbar from \"./Addbar\"\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon, Modal } from \"web3uikit\";\r\nimport Web3 from 'web3';\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\n\r\nconst TweetInFeed = ({profile, ethAddress, search, searchText, detail, id, comment, owner}) => {\r\n\r\n  const initialState = []\r\n\r\n  const [tweets, setTweets] = useState([]);\r\n  const [stars, setStars] = useState([]);\r\n  const [color, setColor] = useState([]);\r\n  const [account, setAccount] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const [selectedTweet, setSelectedTweet] = useState();\r\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    async function loadTweetFeed() {\r\n      const counter = await contractList.methods.getCounter().call();\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n\r\n      for(var i=0;i<counter;i++) {\r\n        const tweet = await contractList.methods.getTweetwithInfo(i).call();\r\n        if(tweet[7] === true) {\r\n          continue;\r\n        }\r\n        const stars = await contractList.methods.getStar(i).call();\r\n        // const starred = await contractList.methods.whoStar(i).send({from: accounts[0]})\r\n        let star = parseInt(stars)\r\n        setTweets((tweets) => [...tweets, tweet]);\r\n        setStars((stars) => [...stars,star]);\r\n        // if(starred === true) {\r\n        //   setColor((color) => [...color, \"#ff1493\"])\r\n        // } else {\r\n        //   setColor((color) => [...color, \"#3f3f3f\"])\r\n        // }\r\n      }\r\n    }\r\n\r\n    async function loadTweetProfile() {\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n      const tweetIdList = await contractList.methods.getUserTweet(ethAddress).call();\r\n      setTweets(initialState)\r\n      setStars(initialState)\r\n\r\n      for(var i=0;i<tweetIdList[1];i++) {\r\n        const tweet = await contractList.methods.getTweetwithInfo(tweetIdList[0][i]).call();\r\n        if(tweet[7] === true) {\r\n          continue;\r\n        }\r\n        const stars = await contractList.methods.getStar(tweetIdList[0][i]).call();\r\n        let star = parseInt(stars)\r\n        setTweets((tweets) => [...tweets, tweet]);\r\n        setStars((stars) => [...stars,star]);\r\n\r\n      }\r\n    }\r\n\r\n    async function loadTweetSearch() {\r\n\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n      const tweetIdList = await contractList.methods.searchTweet(searchText).call();\r\n      setTweets(initialState)\r\n      setStars(initialState)\r\n\r\n      for(var i=0;i<tweetIdList[1];i++) {\r\n        const tweet = await contractList.methods.getTweetwithInfo(tweetIdList[0][i]).call();\r\n        if(tweet[7] === true) {\r\n          continue;\r\n        }\r\n        const stars = await contractList.methods.getStar(tweetIdList[0][i]).call();\r\n        let star = parseInt(stars)\r\n        setTweets((tweets) => [...tweets, tweet]);\r\n        setStars((stars) => [...stars,star]);\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function loadTweetDetail() {\r\n\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n      setTweets(initialState)\r\n      setStars(initialState)\r\n\r\n      const tweet = await contractList.methods.getTweetwithInfo(id).call();\r\n      const stars = await contractList.methods.getStar(id).call();\r\n      let star = parseInt(stars)\r\n      setTweets((tweets) => [...tweets, tweet]);\r\n      setStars((stars) => [...stars,star]);\r\n    }\r\n    \r\n    async function loadComment() {\r\n      // const comments = await contractList.methods.getTweetwithInfo(id).call();\r\n\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n\r\n      setTweets(initialState)\r\n      setStars(initialState)\r\n\r\n      const tweet = await contractList.methods.getTweetwithInfo(owner).call();\r\n      for(let i=0;i<tweet[8].length;i++) {\r\n        const comment = await contractList.methods.getTweetwithInfo(tweet[8][i]).call();\r\n        const stars = await contractList.methods.getStar(tweet[8][i]).call();\r\n\r\n        let star = parseInt(stars)\r\n        setTweets((tweets) => [...tweets, comment]);\r\n        setStars((stars) => [...stars,star]);\r\n      }\r\n      \r\n    }\r\n    \r\n\r\n    if(profile === false) {\r\n      loadTweetFeed();\r\n      \r\n    } else if (detail === true) {\r\n      loadTweetDetail()\r\n    }\r\n    else if (search === true) {\r\n      loadTweetSearch()\r\n    }\r\n    else if(profile === true) {\r\n      loadTweetProfile();\r\n    } else if(comment === true) {\r\n      loadComment()\r\n    }\r\n    \r\n  }, [ethAddress, searchText, id, owner])\r\n\r\n\r\n  const onClickStar = ( async (index, id) => {\r\n\r\n    var whoStar = await contractList.methods.whoStar(id).call({from: account});\r\n\r\n    if (whoStar === false) {\r\n      await contractList.methods.star(id).send({from: account});\r\n\r\n      let tmpStars = [...stars];\r\n      tmpStars[index] += 1;\r\n      setStars(tmpStars);\r\n    } else {\r\n      await contractList.methods.unStar(id).send({from: account});\r\n\r\n      let tmpStars = [...stars];\r\n      tmpStars[index] -= 1;\r\n      setStars(tmpStars);\r\n    }\r\n\r\n  })\r\n\r\n  return (\r\n    \r\n    <>\r\n      {tweets.map((tweet, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"feedTweet\">\r\n                <Link to={`/profile/${tweet[2]}`} className=\"link\"> \r\n                  <img src={tweet?.[6] === \"\" ? defaultImgs[0] : tweet?.[6]} className=\"profilePic\" alt=\"Avatar\"></img>\r\n                </Link>\r\n                <div className=\"completeTweet\">\r\n                  <div className=\"who\">\r\n                    {tweet?.[5] === \"\" ? <div>No name</div> : tweet?.[5]}\r\n                      <div className=\"accWhen\">{\r\n                            `${tweet[2].slice(0, 4)}...${tweet[2].slice(38)} Â·\r\n\r\n                            ${tweet[4]}\r\n                            `  \r\n                          }\r\n                      </div>\r\n                  </div>\r\n                  <div className=\"tweetContent\">\r\n                  {tweet[0]}\r\n                  {tweet[1] !== \"No Img\" ? (\r\n                          <img\r\n                            src={tweet[1]}\r\n                            className=\"tweetImg\"\r\n                          ></img>\r\n                        ) : null}\r\n                  </div>\r\n                  {tweet?.[10] >= 0 ? <TweetInFeed detail={true} id={tweet?.[10]}/> : null}\r\n                  \r\n                  <div className=\"interactions\">\r\n                    <Link to={`/comment/${tweet[9]}`} className=\"link\"> \r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                      {tweet?.[8].length}\r\n                    </div>\r\n                    </Link>\r\n                    <div className=\"interactionNums\" onClick={(e) => {onClickStar(index, tweet?.[9])}}>\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                      {stars[index]}\r\n                    </div>\r\n                    <div className=\"interactionNums\" onClick={e => {\r\n                      setSelectedTweet(tweet?.[9])\r\n                      setVisible(true);}}>\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {selectedTweet && (\r\n                \r\n                <Modal onCloseButtonPressed={() => setVisible(false)}\r\n                      isVisible={visible}\r\n                      hasFooter={false}\r\n                      width=\"700px\"> \r\n                  <h1>Retweet</h1>\r\n                  <div className=\"modal\">\r\n                    <Addbar retweet={true} id={tweet?.[9]}/>\r\n                  </div>\r\n                </Modal>\r\n                \r\n                )}\r\n              </div>\r\n            </>\r\n          );\r\n\r\n        }\r\n      ).reverse()}    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}