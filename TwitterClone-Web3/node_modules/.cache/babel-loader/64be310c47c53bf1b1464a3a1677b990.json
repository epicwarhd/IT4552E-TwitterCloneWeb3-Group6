{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\pages\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { TextArea, Icon, Input } from \"web3uikit\";\nimport \"./Comment.css\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { useMoralis } from \"react-moralis\";\nimport Web3 from 'web3';\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Comment(_ref) {\n  _s();\n\n  let {\n    comment\n  } = _ref;\n  const {\n    Moralis\n  } = useMoralis();\n  const {\n    id\n  } = useParams();\n  const [tweet, setTweet] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [account, setAccount] = useState();\n  const [info, setInfo] = useState();\n  const navigate = useNavigate();\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  useEffect(() => {\n    async function loadAccount() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const info = await contractList.methods.getProfile(accounts[0]).call();\n      setInfo(info);\n    }\n\n    loadAccount();\n  }, []);\n\n  async function addComment() {\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    let dateNow = new Date().toLocaleString() + '';\n    await contractList.methods.addComment(id, tweet, img, dateNow).send({\n      from: account\n    });\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const clickBack = () => {\n    navigate(-1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"back-icon\",\n        onClick: clickBack,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          svg: \"chevronLeft\",\n          fill: \"white\",\n          size: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), \"Tweet\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(TweetInFeed, {\n        detail: true,\n        id: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: (info === null || info === void 0 ? void 0 : info[2]) !== \"\" ? info === null || info === void 0 ? void 0 : info[2] : defaultImgs[0],\n          className: \"profilePic\",\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: addComment,\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"eth\",\n                  title: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        comment: true,\n        owner: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Comment, \"A26VPEN2P8wx/QzG5W2pfUdl7L4=\", false, function () {\n  return [useMoralis, useParams, useNavigate];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/pages/Comment.js"],"names":["TextArea","Icon","Input","TweetInFeed","defaultImgs","useParams","Link","useNavigate","CONTRACT_ABI","CONTRACT_ADDRESS","useMoralis","Web3","useState","useEffect","useRef","Comment","comment","Moralis","id","tweet","setTweet","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","account","setAccount","info","setInfo","navigate","web3","givenProvider","contractList","eth","Contract","loadAccount","accounts","requestAccounts","methods","getProfile","call","addComment","img","data","file","File","name","saveIPFS","ipfs","dateNow","Date","toLocaleString","send","from","window","location","reload","onImageClick","current","click","changeHandler","event","target","files","URL","createObjectURL","clickBack","e","value","display","backgroundColor"],"mappings":"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","sourcesContent":["import { TextArea, Icon, Input } from \"web3uikit\";\r\nimport \"./Comment.css\";\r\nimport TweetInFeed from \"../components/TweetInFeed\"\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport Web3 from 'web3';\r\nimport { useState, useEffect, useRef } from \"react\"\r\n  \r\n  function Comment({ comment }) {\r\n\r\n    const { Moralis } = useMoralis();\r\n\r\n    const { id } = useParams()\r\n    const [tweet, setTweet] = useState()\r\n    const inputFile = useRef(null);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [theFile, setTheFile] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [info, setInfo] = useState()\r\n    const navigate = useNavigate()\r\n\r\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n    const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n    useEffect(() => {\r\n        async function loadAccount() {\r\n          const accounts = await web3.eth.requestAccounts();\r\n          setAccount(accounts[0])\r\n    \r\n          const info = await contractList.methods.getProfile(accounts[0]).call();\r\n          setInfo(info)\r\n        }\r\n        loadAccount()\r\n      }, [])\r\n    \r\n      async function addComment() {\r\n    \r\n        let img;\r\n        if (theFile) {\r\n          const data = theFile;\r\n          const file = new Moralis.File(data.name, data);\r\n          await file.saveIPFS();\r\n          img = file.ipfs();\r\n        }else{\r\n          img = \"No Img\"\r\n        }\r\n    \r\n        let dateNow = new Date().toLocaleString() + ''\r\n    \r\n        await contractList.methods.addComment(id, tweet, img, dateNow).send({from: account})\r\n        window.location.reload();\r\n      }\r\n    \r\n      const onImageClick = () => {\r\n        inputFile.current.click();\r\n      };\r\n    \r\n      const changeHandler = (event) => {\r\n        const img = event.target.files[0];\r\n        setTheFile(img);\r\n        setSelectedFile(URL.createObjectURL(img));\r\n      };\r\n\r\n      const clickBack = () => {\r\n        navigate(-1)\r\n      }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pageIdentify\">\r\n                <div class=\"back-icon\" onClick={clickBack}>\r\n                    <Icon svg=\"chevronLeft\" fill=\"white\" size=\"50\"/>\r\n                </div>\r\n                Tweet\r\n            </div>\r\n            <div className=\"mainContent\">\r\n                \r\n                <TweetInFeed detail={true} id={id}/>\r\n                \r\n                <div className=\"profileTweet\">\r\n                    <img src={info?.[2] !== \"\" ? info?.[2] : defaultImgs[0]} className=\"profilePic\" alt=\"Avatar\"></img>\r\n                    <div className=\"tweetBox\">\r\n                    <TextArea\r\n                        label=\"\"\r\n                        name=\"tweetTxtArea\"\r\n                        value=\"GM World\"\r\n                        type=\"text\"\r\n                        onChange={(e) => setTweet(e.target.value)}\r\n                        width=\"95%\"\r\n                    ></TextArea>\r\n                    {selectedFile && (\r\n                        <img src={selectedFile} className=\"tweetImg\"></img>\r\n                    )}\r\n                    <div className=\"imgOrTweet\">\r\n                        <div className=\"imgDiv\" onClick={onImageClick}>\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"file\"\r\n                                ref={inputFile}\r\n                                onChange={changeHandler}\r\n                                style={{ display: \"none\"}}\r\n                            />\r\n                            <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n                        </div>\r\n                            <div className=\"tweetOptions\">\r\n                                <div className=\"tweet\" onClick={addComment} style={{ backgroundColor: \"#8247e5\" }}>\r\n                                    <Icon fill=\"#ffffff\" size={20} svg=\"eth\" title=\"Tweet\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <TweetInFeed comment={true} owner={id}/>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default Comment;"]},"metadata":{},"sourceType":"module"}