{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lonel\\\\source\\\\repos\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\PopupComment.js\";\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon, Modal, Typography, Input } from \"web3uikit\";\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\nimport './PopupComment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopupComment extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum so don't be a dick\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Join the Discussion!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this._addComment.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"comment-reveal\",\n        onClick: this._handleClick.bind(this),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-count\",\n        children: this._getCommentsTitle(comments.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), commentNodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        body: comment.body\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          required: true,\n          ref: input => this._author = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 92\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Comment\",\n          rows: \"4\",\n          required: true,\n          ref: textarea => this._body = textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-header\",\n        children: this.props.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-body\",\n        children: [\"- \", this.props.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"comment-footer-delete\",\n          onClick: this._deleteComment,\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}\n\nexport default PopupComment;","map":{"version":3,"names":["React","golf","canoe","defaultImgs","Icon","Modal","Typography","Input","useMoralis","useEffect","useState","PopupComment","Component","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert"],"sources":["C:/Users/lonel/source/repos/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/PopupComment.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon, Modal, Typography, Input } from \"web3uikit\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\nimport './PopupComment.css';\r\n\r\nclass PopupComment extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      showComments: false,\r\n      comments: [\r\n        {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\r\n        {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\r\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"},\r\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"},\r\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"},\r\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\r\n      ]\r\n    };\r\n  }\r\n  \r\n  render () {\r\n    const comments = this._getComments();\r\n    let commentNodes;\r\n    let buttonText = 'Show Comments';\r\n    \r\n    if (this.state.showComments) {\r\n      buttonText = 'Hide Comments';\r\n      commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n    }\r\n    \r\n    return(\r\n      <div className=\"comment-box\">\r\n        <header className=\"header\">\r\n          <h2>Join the Discussion!</h2>\r\n        \r\n        </header>\r\n        \r\n        <CommentForm addComment={this._addComment.bind(this)}/>\r\n        <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\r\n          {buttonText}\r\n        </button>\r\n        <h3>Comments</h3>\r\n        <h4 className=\"comment-count\">\r\n          {this._getCommentsTitle(comments.length)}\r\n        </h4>\r\n        {commentNodes}\r\n      </div>  \r\n    );\r\n  } // end render\r\n  \r\n  _addComment(author, body) {\r\n    const comment = {\r\n      id: this.state.comments.length + 1,\r\n      author,\r\n      body\r\n    };\r\n    this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\r\n  }\r\n  \r\n  _handleClick() {\r\n    this.setState({\r\n      showComments: !this.state.showComments\r\n    });\r\n  }\r\n  \r\n  _getComments() {    \r\n    return this.state.comments.map((comment) => { \r\n      return (\r\n        <Comment \r\n          author={comment.author} \r\n          body={comment.body} \r\n          key={comment.id} />\r\n      ); \r\n    });\r\n  }\r\n  \r\n  _getCommentsTitle(commentCount) {\r\n    if (commentCount === 0) {\r\n      return 'No comments yet';\r\n    } else if (commentCount === 1) {\r\n      return \"1 comment\";\r\n    } else {\r\n      return `${commentCount} comments`;\r\n    }\r\n  }\r\n} // end CommentBox component\r\n\r\nclass CommentForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\r\n        <div className=\"comment-form-fields\">\r\n          <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\r\n          <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\r\n        </div>\r\n        <div className=\"comment-form-actions\">\r\n          <button type=\"submit\">Post Comment</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  } // end render\r\n  \r\n  _handleSubmit(event) { \r\n    event.preventDefault();   // prevents page from reloading on submit\r\n    let author = this._author;\r\n    let body = this._body;\r\n    this.props.addComment(author.value, body.value);\r\n  }\r\n} // end CommentForm component\r\n\r\nclass Comment extends React.Component {\r\n  render () {\r\n    return(\r\n      <div className=\"comment\">\r\n        <p className=\"comment-header\">{this.props.author}</p>\r\n        <p className=\"comment-body\">- {this.props.body}</p>\r\n        <div className=\"comment-footer\">\r\n          <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  _deleteComment() {\r\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\r\n  }\r\n}\r\n\r\nexport default PopupComment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}