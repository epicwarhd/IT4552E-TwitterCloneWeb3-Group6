{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { TextArea, Icon, Input } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport Web3 from 'web3';\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [account, setAccount] = useState();\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n\n  async function addTweet() {\n    const accounts = await web3.eth.requestAccounts();\n    setAccount(accounts[0]);\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    await contractList.methods.addTweet().send({\n      from: account,\n      value: 2000000000000000\n    });\n    window.location.reload();\n  } // async function maticTweet() {\n  //   if (!tweet) return;\n  //   let img;\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     img = file.ipfs();\n  //   }else{\n  //     img = \"No Img\"\n  //   }\n  //   let options = {\n  //     contractAddress: \"0x89d6340347210e15CEdF721ec58130804E80A204\",\n  //     functionName: \"addTweet\",\n  //     abi: [{\n  //       \"inputs\": [\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetTxt\",\n  //           \"type\": \"string\"\n  //         },\n  //         {\n  //           \"internalType\": \"string\",\n  //           \"name\": \"tweetImg\",\n  //           \"type\": \"string\"\n  //         }\n  //       ],\n  //       \"name\": \"addTweet\",\n  //       \"outputs\": [],\n  //       \"stateMutability\": \"payable\",\n  //       \"type\": \"function\"\n  //     }],\n  //     params: {\n  //       tweetTxt: tweet,\n  //       tweetImg: img,\n  //     },\n  //     msgValue: Moralis.Units.ETH(0.002),\n  //   }\n  //   await contractProcessor.fetch({\n  //     params: options,\n  //     onSuccess: () => {\n  //       saveTweet();\n  //     },\n  //     onError: (error) => {\n  //       console.log(error.data.message)\n  //     }\n  //   });\n  // }\n  // async function saveTweet() {\n  //   if(!tweet) return;\n  //   const Tweets = Moralis.Object.extend(\"Tweets\");\n  //   const newTweet = new Tweets();\n  //   newTweet.set(\"tweetTxt\", tweet);\n  //   newTweet.set(\"tweeterPfp\", user.attributes.pfp);\n  //   newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\n  //   newTweet.set(\"tweeterUserName\", user.attributes.username);\n  //   if (theFile) {\n  //     const data = theFile;\n  //     const file = new Moralis.File(data.name, data);\n  //     await file.saveIPFS();\n  //     newTweet.set(\"tweetImg\", file.ipfs());\n  //   }\n  //   await newTweet.save();\n  //   window.location.reload();\n  // }\n\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Search Twitter\",\n        name: \"Search Twitter\",\n        prefixIcon: \"search\",\n        labelBgColor: \"#141d26\",\n        onChange: event => {\n          setSearch(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: addTweet,\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"eth\",\n                  title: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        searchText: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"QjNpRPzLQsE82FLHn6pwCm6OGTg=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/pages/Home.js"],"names":["React","defaultImgs","TextArea","Icon","Input","useState","useRef","TweetInFeed","useMoralis","useWeb3ExecuteFunction","Web3","CONTRACT_ABI","CONTRACT_ADDRESS","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","search","setSearch","account","setAccount","web3","givenProvider","contractList","eth","Contract","addTweet","accounts","requestAccounts","img","data","file","File","name","saveIPFS","ipfs","methods","send","from","value","window","location","reload","onImageClick","click","changeHandler","event","target","files","URL","createObjectURL","attributes","pfp","e","display","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,WAAtC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,UAAT,EAAqBC,sBAArB,QAAmD,eAAnD;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,EAAuBC,gBAAvB,QAA+C,WAA/C;;;;AAGA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEjB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,UAAU,EAA9B;AACA,QAAMO,IAAI,GAAGD,OAAO,CAACE,IAAR,CAAaC,OAAb,EAAb;AACA,QAAMC,iBAAiB,GAAGT,sBAAsB,EAAhD;AAEA,QAAMU,SAAS,GAAGb,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,EAAhD;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,EAAtC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,EAAlC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,EAAtC;AACA,QAAMyB,IAAI,GAAG,IAAIpB,IAAJ,CAASA,IAAI,CAACqB,aAAL,IAAsB,uBAA/B,CAAb;AACA,QAAMC,YAAY,GAAG,IAAIF,IAAI,CAACG,GAAL,CAASC,QAAb,CAAsBvB,YAAtB,EAAoCC,gBAApC,CAArB;;AAEA,iBAAeuB,QAAf,GAA0B;AAExB,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACG,GAAL,CAASI,eAAT,EAAvB;AACAR,IAAAA,UAAU,CAACO,QAAQ,CAAC,CAAD,CAAT,CAAV;AAEA,QAAIE,GAAJ;;AACA,QAAIhB,OAAJ,EAAa;AACX,YAAMiB,IAAI,GAAGjB,OAAb;AACA,YAAMkB,IAAI,GAAG,IAAI1B,OAAO,CAAC2B,IAAZ,CAAiBF,IAAI,CAACG,IAAtB,EAA4BH,IAA5B,CAAb;AACA,YAAMC,IAAI,CAACG,QAAL,EAAN;AACAL,MAAAA,GAAG,GAAGE,IAAI,CAACI,IAAL,EAAN;AACD,KALD,MAKK;AACHN,MAAAA,GAAG,GAAG,QAAN;AACD;;AAED,UAAMN,YAAY,CAACa,OAAb,CAAqBV,QAArB,GAAgCW,IAAhC,CAAqC;AAACC,MAAAA,IAAI,EAAEnB,OAAP;AAAgBoB,MAAAA,KAAK,EAAE;AAAvB,KAArC,CAAN;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,GAhCgB,CAkCjB;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzBjC,IAAAA,SAAS,CAACF,OAAV,CAAkBoC,KAAlB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,UAAMjB,GAAG,GAAGiB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAZ;AACAlC,IAAAA,UAAU,CAACe,GAAD,CAAV;AACAjB,IAAAA,eAAe,CAACqC,GAAG,CAACC,eAAJ,CAAoBrB,GAApB,CAAD,CAAf;AACD,GAJD;;AAMA,sBACE;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAGE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,EAAC,gBADR;AAEE,QAAA,IAAI,EAAE,gBAFR;AAGE,QAAA,UAAU,EAAC,QAHb;AAIE,QAAA,YAAY,EAAC,SAJf;AAKE,QAAA,QAAQ,EAAEiB,KAAK,IAAI;AACf5B,UAAAA,SAAS,CAAC4B,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAT;AACC;AAPP;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEjC,IAAI,CAAC6C,UAAL,CAAgBC,GAAhB,GAAsB9C,IAAI,CAAC6C,UAAL,CAAgBC,GAAtC,GAA4C5D,WAAW,CAAC,CAAD,CAAjE;AAAsE,UAAA,SAAS,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACE,QAAC,QAAD;AACE,YAAA,KAAK,EAAC,EADR;AAEE,YAAA,IAAI,EAAC,cAFP;AAGE,YAAA,KAAK,EAAC,UAHR;AAIE,YAAA,IAAI,EAAC,MAJP;AAKE,YAAA,QAAQ,EAAG6D,CAAD,IAAOrC,QAAQ,CAACqC,CAAC,CAACN,MAAF,CAASR,KAAV,CAL3B;AAME,YAAA,KAAK,EAAC;AANR;AAAA;AAAA;AAAA;AAAA,kBADF,EASG5B,YAAY,iBACX;AAAK,YAAA,GAAG,EAAEA,YAAV;AAAwB,YAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAYE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC,QAAf;AAAwB,cAAA,OAAO,EAAEgC,YAAjC;AAAA,sCACA;AACI,gBAAA,IAAI,EAAC,MADT;AAEI,gBAAA,IAAI,EAAC,MAFT;AAGI,gBAAA,GAAG,EAAEjC,SAHT;AAII,gBAAA,QAAQ,EAAEmC,aAJd;AAKI,gBAAA,KAAK,EAAE;AAAES,kBAAAA,OAAO,EAAE;AAAX;AALX;AAAA;AAAA;AAAA;AAAA,sBADA,eAQE,QAAC,IAAD;AAAM,gBAAA,IAAI,EAAC,SAAX;AAAqB,gBAAA,IAAI,EAAE,EAA3B;AAA+B,gBAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,qCAEE;AAAK,gBAAA,SAAS,EAAC,OAAf;AAAuB,gBAAA,OAAO,EAAE5B,QAAhC;AAA0C,gBAAA,KAAK,EAAE;AAAE6B,kBAAAA,eAAe,EAAE;AAAnB,iBAAjD;AAAA,uCACE,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAC,SAAX;AAAqB,kBAAA,IAAI,EAAE,EAA3B;AAA+B,kBAAA,GAAG,EAAC,KAAnC;AAAyC,kBAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eA8CE,QAAC,WAAD;AAAa,QAAA,UAAU,EAAEtC;AAAzB;AAAA;AAAA;AAAA;AAAA,cA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAsDD,CAlLD;;GAAMb,I;UAEgBL,U,EAEMC,sB;;;KAJtBI,I;AAoLN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { TextArea, Icon, Input } from \"web3uikit\";\r\nimport { useState, useRef } from \"react\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport Web3 from 'web3';\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\n\r\n\r\nconst Home = () => {\r\n\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const [tweet, setTweet] = useState();\r\n  const [search, setSearch] = useState(\"\")\r\n  const [account, setAccount] = useState();\r\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n  async function addTweet() {\r\n\r\n    const accounts = await web3.eth.requestAccounts();\r\n    setAccount(accounts[0])\r\n\r\n    let img;\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      img = file.ipfs();\r\n    }else{\r\n      img = \"No Img\"\r\n    }\r\n\r\n    await contractList.methods.addTweet().send({from: account, value: 2000000000000000})\r\n    window.location.reload();\r\n  }\r\n\r\n  // async function maticTweet() {\r\n\r\n  //   if (!tweet) return;\r\n\r\n  //   let img;\r\n  //   if (theFile) {\r\n  //     const data = theFile;\r\n  //     const file = new Moralis.File(data.name, data);\r\n  //     await file.saveIPFS();\r\n  //     img = file.ipfs();\r\n  //   }else{\r\n  //     img = \"No Img\"\r\n  //   }\r\n\r\n  //   let options = {\r\n  //     contractAddress: \"0x89d6340347210e15CEdF721ec58130804E80A204\",\r\n  //     functionName: \"addTweet\",\r\n  //     abi: [{\r\n  //       \"inputs\": [\r\n  //         {\r\n  //           \"internalType\": \"string\",\r\n  //           \"name\": \"tweetTxt\",\r\n  //           \"type\": \"string\"\r\n  //         },\r\n  //         {\r\n  //           \"internalType\": \"string\",\r\n  //           \"name\": \"tweetImg\",\r\n  //           \"type\": \"string\"\r\n  //         }\r\n  //       ],\r\n  //       \"name\": \"addTweet\",\r\n  //       \"outputs\": [],\r\n  //       \"stateMutability\": \"payable\",\r\n  //       \"type\": \"function\"\r\n  //     }],\r\n  //     params: {\r\n  //       tweetTxt: tweet,\r\n  //       tweetImg: img,\r\n  //     },\r\n  //     msgValue: Moralis.Units.ETH(0.002),\r\n  //   }\r\n\r\n  //   await contractProcessor.fetch({\r\n  //     params: options,\r\n  //     onSuccess: () => {\r\n  //       saveTweet();\r\n  //     },\r\n  //     onError: (error) => {\r\n  //       console.log(error.data.message)\r\n  //     }\r\n  //   });\r\n\r\n  // }\r\n\r\n\r\n  // async function saveTweet() {\r\n\r\n  //   if(!tweet) return;\r\n\r\n  //   const Tweets = Moralis.Object.extend(\"Tweets\");\r\n\r\n  //   const newTweet = new Tweets();\r\n\r\n  //   newTweet.set(\"tweetTxt\", tweet);\r\n  //   newTweet.set(\"tweeterPfp\", user.attributes.pfp);\r\n  //   newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\r\n  //   newTweet.set(\"tweeterUserName\", user.attributes.username);\r\n\r\n  //   if (theFile) {\r\n  //     const data = theFile;\r\n  //     const file = new Moralis.File(data.name, data);\r\n  //     await file.saveIPFS();\r\n  //     newTweet.set(\"tweetImg\", file.ipfs());\r\n  //   }\r\n\r\n  //   await newTweet.save();\r\n  //   window.location.reload();\r\n\r\n  // }\r\n\r\n  const onImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"pageIdentify\">Home</div>\r\n      \r\n      <div className=\"mainContent\">\r\n        <Input\r\n          label=\"Search Twitter\"\r\n          name =\"Search Twitter\"\r\n          prefixIcon=\"search\"\r\n          labelBgColor=\"#141d26\" \r\n          onChange={event => {\r\n              setSearch(event.target.value)\r\n              }\r\n            }\r\n          >\r\n        </Input>\r\n        <div className=\"profileTweet\">\r\n          <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n          <div className=\"tweetBox\">\r\n            <TextArea\r\n              label=\"\"\r\n              name=\"tweetTxtArea\"\r\n              value=\"GM World\"\r\n              type=\"text\"\r\n              onChange={(e) => setTweet(e.target.value)}\r\n              width=\"95%\"\r\n            ></TextArea>\r\n            {selectedFile && (\r\n              <img src={selectedFile} className=\"tweetImg\"></img>\r\n            )}\r\n            <div className=\"imgOrTweet\">\r\n              <div className=\"imgDiv\" onClick={onImageClick}>\r\n              <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  ref={inputFile}\r\n                  onChange={changeHandler}\r\n                  style={{ display: \"none\"}}\r\n                />\r\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n              </div>\r\n              <div className=\"tweetOptions\">\r\n                {/* <div className=\"tweet\" onClick={saveTweet}>Tweet</div> */}\r\n                <div className=\"tweet\" onClick={addTweet} style={{ backgroundColor: \"#8247e5\" }}>\r\n                  <Icon fill=\"#ffffff\" size={20} svg=\"eth\" title=\"Tweet\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TweetInFeed searchText={search}/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}