{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport Web3 from 'web3';\nimport { useEffect, useState } from \"react\";\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = () => {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  const [stars, setStars] = useState([]);\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  useEffect(() => {\n    async function load() {\n      const counter = await contractList.methods.getCounter().call();\n\n      for (var i = 0; i < counter; i++) {\n        const tweet = await contractList.methods.getTweet(i).call();\n        const stars = await contractList.methods.getStar(i).call();\n        let star = parseInt(stars);\n        setTweets(tweets => [...tweets, tweet]);\n        setStars(stars => [...stars, star]);\n      }\n    }\n\n    load();\n  }, []);\n\n  const onClickStar = async index => {\n    let tmpStars = [...stars];\n    tmpStars[index] += 1;\n    setStars(tmpStars);\n    await contractList.methods.star(index).call();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: console.log(stars)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), tweets.map((tweet, index) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${tweet[2].slice(0, 4)}...${tweet[2].slice(38)} \n                        \n                          `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [tweet[0], tweet[1] !== \"No Img\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: tweet[1],\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 27\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                onClick: e => {\n                  onClickStar(index);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"red\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this), stars[index]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }).reverse()]\n  }, void 0, true);\n};\n\n_s(TweetInFeed, \"6Xd0nNiY7NOxozJuRm/PP0CHS9A=\");\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","Web3","useEffect","useState","CONTRACT_ABI","CONTRACT_ADDRESS","TweetInFeed","tweets","setTweets","stars","setStars","web3","givenProvider","contractList","eth","Contract","load","counter","methods","getCounter","call","i","tweet","getTweet","getStar","star","parseInt","onClickStar","index","tmpStars","console","log","map","slice","e","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport Web3 from 'web3';\r\nimport { useEffect, useState } from \"react\";\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\n\r\nconst TweetInFeed = () => {\r\n\r\n  const [tweets, setTweets] = useState([]);\r\n  const [stars, setStars] = useState([]);\r\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n        \r\n      const counter = await contractList.methods.getCounter().call();\r\n\r\n      for(var i=0;i<counter;i++) {\r\n        const tweet = await contractList.methods.getTweet(i).call();\r\n        const stars = await contractList.methods.getStar(i).call();\r\n        let star = parseInt(stars)\r\n        setTweets((tweets) => [...tweets, tweet]);\r\n        setStars((stars) => [...stars,star]);\r\n      }\r\n\r\n    }\r\n\r\n    load();\r\n  }, [])\r\n\r\n  const onClickStar = ( async (index) => {\r\n    let tmpStars = [...stars];\r\n    tmpStars[index] += 1;\r\n    setStars(tmpStars);\r\n\r\n    await contractList.methods.star(index).call();\r\n\r\n    \r\n  })\r\n\r\n  return (\r\n    \r\n    <>\r\n      <div>{console.log(stars)}</div>\r\n      {tweets.map((tweet, index) => {\r\n          return (\r\n            <>\r\n              <div className=\"feedTweet\">\r\n                <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n                <div className=\"completeTweet\">\r\n                  <div className=\"who\">\r\n                  \r\n                    <div className=\"accWhen\">{\r\n                          `${tweet[2].slice(0, 4)}...${tweet[2].slice(38)} \r\n                        \r\n                          `  \r\n                        }\r\n                        </div>\r\n                  </div>\r\n                  <div className=\"tweetContent\">\r\n                  {tweet[0]}\r\n                  {tweet[1] !== \"No Img\" ? (\r\n                          <img\r\n                            src={tweet[1]}\r\n                            className=\"tweetImg\"\r\n                          ></img>\r\n                        ) : null}\r\n                  </div>\r\n                  <div className=\"interactions\">\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                    </div>\r\n                    <div className=\"interactionNums\" onClick={(e) => {onClickStar(index)}}>\r\n                      <Icon fill=\"red\" size={20} svg=\"star\" />\r\n                      {stars[index]}\r\n                    </div>\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n\r\n        }\r\n      ).reverse()}    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}