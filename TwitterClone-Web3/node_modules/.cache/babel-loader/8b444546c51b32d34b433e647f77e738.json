{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\pages\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport { TextArea, Icon, Input } from \"web3uikit\";\nimport \"./Comment.css\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { useMoralis } from \"react-moralis\";\nimport Web3 from 'web3';\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comment(_ref) {\n  _s();\n\n  let {\n    comment\n  } = _ref;\n  const {\n    Moralis\n  } = useMoralis();\n  const {\n    id\n  } = useParams();\n  const [tweet, setTweet] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [account, setAccount] = useState();\n  const [info, setInfo] = useState();\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  useEffect(() => {\n    async function loadAccount() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const info = await contractList.methods.getProfile(accounts[0]).call();\n      setInfo(info);\n    }\n\n    loadAccount();\n  }, []);\n\n  async function addTweet() {\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    let dateNow = new Date().toLocaleString() + '';\n    await contractList.methods.addTweet(tweet, img, dateNow).send({\n      from: account,\n      value: 2000000000000000\n    });\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(TweetInFeed, {\n      detail: true,\n      id: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profileTweet\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: defaultImgs[0],\n        className: \"profilePic\",\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox\",\n        children: [/*#__PURE__*/_jsxDEV(TextArea, {\n          label: \"\",\n          name: \"tweetTxtArea\",\n          value: \"GM World\",\n          type: \"text\",\n          onChange: e => setTweet(e.target.value),\n          width: \"95%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgOrTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"file\",\n              style: {\n                display: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Icon, {\n              fill: \"#1DA1F2\",\n              size: 20,\n              svg: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetOptions\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweet\",\n              style: {\n                backgroundColor: \"#8247e5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#ffffff\",\n                size: 20,\n                svg: \"eth\",\n                title: \"Tweet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n      profile: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Comment, \"+zu8q1aMb3MPGYLwF6yUmwIZgnc=\", false, function () {\n  return [useMoralis, useParams];\n});\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/pages/Comment.js"],"names":["TextArea","Icon","Input","TweetInFeed","defaultImgs","useParams","Link","CONTRACT_ABI","CONTRACT_ADDRESS","useMoralis","Web3","useState","useEffect","useRef","Comment","comment","Moralis","id","tweet","setTweet","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","account","setAccount","info","setInfo","web3","givenProvider","contractList","eth","Contract","loadAccount","accounts","requestAccounts","methods","getProfile","call","addTweet","img","data","file","File","name","saveIPFS","ipfs","dateNow","Date","toLocaleString","send","from","value","window","location","reload","onImageClick","current","click","changeHandler","event","target","files","URL","createObjectURL","e","display","backgroundColor"],"mappings":"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","sourcesContent":["import { TextArea, Icon, Input } from \"web3uikit\";\r\nimport \"./Comment.css\";\r\nimport TweetInFeed from \"../components/TweetInFeed\"\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\nimport { useMoralis } from \"react-moralis\";\r\nimport Web3 from 'web3';\r\nimport { useState, useEffect, useRef } from \"react\"\r\n  \r\n  function Comment({ comment }) {\r\n\r\n    const { Moralis } = useMoralis();\r\n\r\n    const { id } = useParams()\r\n    const [tweet, setTweet] = useState()\r\n    const inputFile = useRef(null);\r\n    const [selectedFile, setSelectedFile] = useState();\r\n    const [theFile, setTheFile] = useState();\r\n    const [account, setAccount] = useState();\r\n    const [info, setInfo] = useState()\r\n\r\n    const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n    const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n    useEffect(() => {\r\n        async function loadAccount() {\r\n          const accounts = await web3.eth.requestAccounts();\r\n          setAccount(accounts[0])\r\n    \r\n          const info = await contractList.methods.getProfile(accounts[0]).call();\r\n          setInfo(info)\r\n        }\r\n        loadAccount()\r\n      }, [])\r\n    \r\n      async function addTweet() {\r\n    \r\n        let img;\r\n        if (theFile) {\r\n          const data = theFile;\r\n          const file = new Moralis.File(data.name, data);\r\n          await file.saveIPFS();\r\n          img = file.ipfs();\r\n        }else{\r\n          img = \"No Img\"\r\n        }\r\n    \r\n        let dateNow = new Date().toLocaleString() + ''\r\n    \r\n        await contractList.methods.addTweet(tweet, img, dateNow).send({from: account, value: 2000000000000000})\r\n        window.location.reload();\r\n      }\r\n    \r\n      const onImageClick = () => {\r\n        inputFile.current.click();\r\n      };\r\n    \r\n      const changeHandler = (event) => {\r\n        const img = event.target.files[0];\r\n        setTheFile(img);\r\n        setSelectedFile(URL.createObjectURL(img));\r\n      };\r\n\r\n    return (\r\n        <div className=\"mainContent\">\r\n            \r\n            <TweetInFeed detail={true} id={id}/>\r\n            \r\n            <div className=\"profileTweet\">\r\n                <img src={defaultImgs[0]} className=\"profilePic\" alt=\"Avatar\"></img>\r\n                <div className=\"tweetBox\">\r\n                <TextArea\r\n                    label=\"\"\r\n                    name=\"tweetTxtArea\"\r\n                    value=\"GM World\"\r\n                    type=\"text\"\r\n                    onChange={(e) => setTweet(e.target.value)}\r\n                    width=\"95%\"\r\n                ></TextArea>\r\n                {/* {selectedFile && (\r\n                    <img src={selectedFile} className=\"tweetImg\"></img>\r\n                )} */}\r\n                <div className=\"imgOrTweet\">\r\n                    <div className=\"imgDiv\" >\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n\r\n                            style={{ display: \"none\"}}\r\n                        />\r\n                        <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n                    </div>\r\n                        <div className=\"tweetOptions\">\r\n                        {/* <div className=\"tweet\" onClick={saveTweet}>Tweet</div> */}\r\n                            <div className=\"tweet\" style={{ backgroundColor: \"#8247e5\" }}>\r\n                                <Icon fill=\"#ffffff\" size={20} svg=\"eth\" title=\"Tweet\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <TweetInFeed profile={false}/>\r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Comment;"]},"metadata":{},"sourceType":"module"}