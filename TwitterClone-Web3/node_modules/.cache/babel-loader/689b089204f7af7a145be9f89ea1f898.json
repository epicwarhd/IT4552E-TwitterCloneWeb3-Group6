{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lonel\\\\source\\\\repos\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\PopupComment.js\";\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon, Modal, Typography, Input } from \"web3uikit\";\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect, useState } from \"react\"; //import './PopupComment.scss';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PopupComment extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      showComments: false,\n      comments: [{\n        id: 1,\n        author: \"landiggity\",\n        body: \"This is my first comment on this forum so don't be a dick\"\n      }, {\n        id: 2,\n        author: \"scarlett-jo\",\n        body: \"That's a mighty fine comment you've got there my good looking fellow...\"\n      }, {\n        id: 3,\n        author: \"rosco\",\n        body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"\n      }]\n    };\n  }\n\n  render() {\n    const comments = this._getComments();\n\n    let commentNodes;\n    let buttonText = 'Show Comments';\n\n    if (this.state.showComments) {\n      buttonText = 'Hide Comments';\n      commentNodes = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-list\",\n        children: comments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join the Discussion!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n        addComment: this._addComment.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"comment-reveal\",\n        onClick: this._handleClick.bind(this),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"comment-count\",\n        children: this._getCommentsTitle(comments.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), commentNodes]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } // end render\n\n\n  _addComment(author, body) {\n    const comment = {\n      id: this.state.comments.length + 1,\n      author,\n      body\n    };\n    this.setState({\n      comments: this.state.comments.concat([comment])\n    }); // *new array references help React stay fast, so concat works better than push here.\n  }\n\n  _handleClick() {\n    this.setState({\n      showComments: !this.state.showComments\n    });\n  }\n\n  _getComments() {\n    return this.state.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: comment.author,\n        body: comment.body\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  _getCommentsTitle(commentCount) {\n    if (commentCount === 0) {\n      return 'No comments yet';\n    } else if (commentCount === 1) {\n      return \"1 comment\";\n    } else {\n      return `${commentCount} comments`;\n    }\n  }\n\n} // end CommentBox component\n\n\nclass CommentForm extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"comment-form\",\n      onSubmit: this._handleSubmit.bind(this),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Name\",\n          required: true,\n          ref: input => this._author = input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 92\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Comment\",\n          rows: \"4\",\n          required: true,\n          ref: textarea => this._body = textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  } // end render\n\n\n  _handleSubmit(event) {\n    event.preventDefault(); // prevents page from reloading on submit\n\n    let author = this._author;\n    let body = this._body;\n    this.props.addComment(author.value, body.value);\n  }\n\n} // end CommentForm component\n\n\nclass Comment extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-header\",\n        children: this.props.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment-body\",\n        children: [\"- \", this.props.body]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"comment-footer-delete\",\n          onClick: this._deleteComment,\n          children: \"Delete Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n\n  _deleteComment() {\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\n  }\n\n}\n\nexport default PopupComment;","map":{"version":3,"sources":["C:/Users/lonel/source/repos/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/PopupComment.js"],"names":["React","golf","canoe","defaultImgs","Icon","Modal","Typography","Input","useMoralis","useEffect","useState","PopupComment","Component","constructor","state","showComments","comments","id","author","body","render","_getComments","commentNodes","buttonText","_addComment","bind","_handleClick","_getCommentsTitle","length","comment","setState","concat","map","commentCount","CommentForm","_handleSubmit","input","_author","textarea","_body","event","preventDefault","props","addComment","value","Comment","_deleteComment","alert"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon, Modal, Typography, Input } from \"web3uikit\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n//import './PopupComment.scss';\r\n\r\nclass PopupComment extends React.Component {\r\n  constructor() {\r\n    super();\r\n    \r\n    this.state = {\r\n      showComments: false,\r\n      comments: [\r\n        {id: 1, author: \"landiggity\", body: \"This is my first comment on this forum so don't be a dick\"},\r\n        {id: 2, author: \"scarlett-jo\", body: \"That's a mighty fine comment you've got there my good looking fellow...\"},\r\n        {id: 3, author: \"rosco\", body: \"What is the meaning of all of this 'React' mumbo-jumbo?\"}\r\n      ]\r\n    };\r\n  }\r\n  \r\n  render () {\r\n    const comments = this._getComments();\r\n    let commentNodes;\r\n    let buttonText = 'Show Comments';\r\n    \r\n    if (this.state.showComments) {\r\n      buttonText = 'Hide Comments';\r\n      commentNodes = <div className=\"comment-list\">{comments}</div>;\r\n    }\r\n    \r\n    return(\r\n      <div className=\"comment-box\">\r\n        <h2>Join the Discussion!</h2>\r\n        <CommentForm addComment={this._addComment.bind(this)}/>\r\n        <button id=\"comment-reveal\" onClick={this._handleClick.bind(this)}>\r\n          {buttonText}\r\n        </button>\r\n        <h3>Comments</h3>\r\n        <h4 className=\"comment-count\">\r\n          {this._getCommentsTitle(comments.length)}\r\n        </h4>\r\n        {commentNodes}\r\n      </div>  \r\n    );\r\n  } // end render\r\n  \r\n  _addComment(author, body) {\r\n    const comment = {\r\n      id: this.state.comments.length + 1,\r\n      author,\r\n      body\r\n    };\r\n    this.setState({ comments: this.state.comments.concat([comment]) }); // *new array references help React stay fast, so concat works better than push here.\r\n  }\r\n  \r\n  _handleClick() {\r\n    this.setState({\r\n      showComments: !this.state.showComments\r\n    });\r\n  }\r\n  \r\n  _getComments() {    \r\n    return this.state.comments.map((comment) => { \r\n      return (\r\n        <Comment \r\n          author={comment.author} \r\n          body={comment.body} \r\n          key={comment.id} />\r\n      ); \r\n    });\r\n  }\r\n  \r\n  _getCommentsTitle(commentCount) {\r\n    if (commentCount === 0) {\r\n      return 'No comments yet';\r\n    } else if (commentCount === 1) {\r\n      return \"1 comment\";\r\n    } else {\r\n      return `${commentCount} comments`;\r\n    }\r\n  }\r\n} // end CommentBox component\r\n\r\nclass CommentForm extends React.Component {\r\n  render() {\r\n    return (\r\n      <form className=\"comment-form\" onSubmit={this._handleSubmit.bind(this)}>\r\n        <div className=\"comment-form-fields\">\r\n          <input placeholder=\"Name\" required ref={(input) => this._author = input}></input><br />\r\n          <textarea placeholder=\"Comment\" rows=\"4\" required ref={(textarea) => this._body = textarea}></textarea>\r\n        </div>\r\n        <div className=\"comment-form-actions\">\r\n          <button type=\"submit\">Post Comment</button>\r\n        </div>\r\n      </form>\r\n    );\r\n  } // end render\r\n  \r\n  _handleSubmit(event) { \r\n    event.preventDefault();   // prevents page from reloading on submit\r\n    let author = this._author;\r\n    let body = this._body;\r\n    this.props.addComment(author.value, body.value);\r\n  }\r\n} // end CommentForm component\r\n\r\nclass Comment extends React.Component {\r\n  render () {\r\n    return(\r\n      <div className=\"comment\">\r\n        <p className=\"comment-header\">{this.props.author}</p>\r\n        <p className=\"comment-body\">- {this.props.body}</p>\r\n        <div className=\"comment-footer\">\r\n          <a href=\"#\" className=\"comment-footer-delete\" onClick={this._deleteComment}>Delete Comment</a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  _deleteComment() {\r\n    alert(\"-- DELETE Comment Functionality COMMING SOON...\");\r\n  }\r\n}\r\n\r\nexport default PopupComment;\r\n"]},"metadata":{},"sourceType":"module"}