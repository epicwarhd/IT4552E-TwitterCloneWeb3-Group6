{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [tweetArr, setTweetArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  const contractProcessor = useWeb3ExecuteFunction();\n  let options = {\n    contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\n    functionName: \"addTweet\",\n    abi: [{\n      \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"tweetTxt\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"tweetImg\",\n        \"type\": \"string\"\n      }],\n      \"name\": \"addTweet\",\n      \"outputs\": [],\n      \"stateMutability\": \"payable\",\n      \"type\": \"function\"\n    }],\n    params: {\n      tweetTxt: \"tweet\",\n      tweetImg: \"img\"\n    },\n    msgValue: Moralis.Units.ETH(0.002)\n  };\n\n  async function getTweet() {\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        console.log(\"success\");\n      },\n      onError: () => {\n        console.log('error');\n      }\n    });\n  }\n\n  useEffect(() => {\n    getTweet();\n  }, [profile]); // await contractProcessor.fetch({\n  //   params: options,\n  //   onSuccess: () => {\n  //     saveTweet();\n  //   },\n  //   onError: (error) => {\n  //     console.log(error.data.message)\n  //   }\n  // });\n\n  useEffect(() => {\n    async function getTweets() {\n      try {\n        const Tweets = Moralis.Object.extend(\"Tweets\");\n        const query = new Moralis.Query(Tweets);\n\n        if (profile) {\n          query.equalTo(\"tweeterAcc\", account);\n        }\n\n        const results = await query.find();\n        setTweetArr(results); // console.log(results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getTweets();\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweetArr === null || tweetArr === void 0 ? void 0 : tweetArr.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: [e.attributes.tweeterUserName.slice(0, 6), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${e.attributes.tweeterAcc.slice(0, 4)}...${e.attributes.tweeterAcc.slice(38)} Â· \n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                  month: 'short'\n                })}  \n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                  day: 'numeric'\n                })}\n                        `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [e.attributes.tweetTxt, e.attributes.tweetImg && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.attributes.tweetImg,\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"p2nBPdHlf+JwfoXbBQvZFJ3Mq8g=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","useMoralis","useWeb3ExecuteFunction","useMoralisWeb3Api","useMoralisWeb3ApiCall","useEffect","useState","TweetInFeed","profile","tweetArr","setTweetArr","Moralis","account","contractProcessor","options","contractAddress","functionName","abi","params","tweetTxt","tweetImg","msgValue","Units","ETH","getTweet","fetch","onSuccess","console","log","onError","getTweets","Tweets","Object","extend","query","Query","equalTo","results","find","error","map","e","attributes","tweeterPfp","tweeterUserName","slice","tweeterAcc","createdAt","toLocaleString","month","day","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n  const [tweetArr, setTweetArr] = useState();\r\n  const { Moralis, account } = useMoralis();\r\n\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  let options = {\r\n    contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\r\n    functionName: \"addTweet\",\r\n    abi: [{\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"tweetTxt\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"tweetImg\",\r\n          \"type\": \"string\"\r\n        }\r\n      ],\r\n      \"name\": \"addTweet\",\r\n      \"outputs\": [],\r\n      \"stateMutability\": \"payable\",\r\n      \"type\": \"function\"\r\n    }],\r\n    params: {\r\n      tweetTxt: \"tweet\",\r\n      tweetImg: \"img\",\r\n    },\r\n    msgValue: Moralis.Units.ETH(0.002),\r\n  }\r\n\r\n\r\n  async function getTweet() {\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        console.log(\"success\")\r\n      },\r\n      onError: () => {\r\n        console.log('error')\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getTweet()\r\n  },[profile])\r\n\r\n\r\n  // await contractProcessor.fetch({\r\n  //   params: options,\r\n  //   onSuccess: () => {\r\n  //     saveTweet();\r\n  //   },\r\n  //   onError: (error) => {\r\n  //     console.log(error.data.message)\r\n  //   }\r\n  // });\r\n\r\n  useEffect(() => {\r\n    async function getTweets() {\r\n      try {\r\n        const Tweets = Moralis.Object.extend(\"Tweets\");\r\n        const query = new Moralis.Query(Tweets);\r\n        if (profile) {\r\n          query.equalTo(\"tweeterAcc\", account);\r\n        }\r\n        const results = await query.find();\r\n\r\n        setTweetArr(results);\r\n        // console.log(results);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    getTweets();\r\n  }, [profile]);\r\n\r\n  return (\r\n    <>\r\n      {tweetArr?.map((e) => {\r\n        return (\r\n          <>\r\n            <div className=\"feedTweet\">\r\n              <img src={e.attributes.tweeterPfp ? e.attributes.tweeterPfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n              <div className=\"completeTweet\">\r\n                <div className=\"who\">\r\n                {e.attributes.tweeterUserName.slice(0, 6)}\r\n                  <div className=\"accWhen\">{\r\n                        `${e.attributes.tweeterAcc.slice(0, 4)}...${e.attributes.tweeterAcc.slice(38)} Â· \r\n                        ${e.attributes.createdAt.toLocaleString('en-us', { month: 'short' })}  \r\n                        ${e.attributes.createdAt.toLocaleString('en-us', { day: 'numeric' })}\r\n                        `  \r\n                      }\r\n                      </div>\r\n                </div>\r\n                <div className=\"tweetContent\">\r\n                {e.attributes.tweetTxt}\r\n                {e.attributes.tweetImg && (\r\n                        <img\r\n                          src={e.attributes.tweetImg}\r\n                          className=\"tweetImg\"\r\n                        ></img>\r\n                      )}\r\n                </div>\r\n                <div className=\"interactions\">\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                    12\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }).reverse()}\r\n\r\n      {/* \r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 Â· 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Nice Day Golfing Today Shot 73 (+2)\r\n            <img src={golf} className=\"tweetImg\"></img>\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 Â· 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            is simply dummy text of the printing and typesetting industry. Lorem\r\n            Ipsum has been the industry's standard dummy text ever since the\r\n            1500s, when an unknown printer took a galley of type and scrambled\r\n            it to make a type specimen book. It has survived not only five\r\n            centuries, but also the leap into electronic typesetting, remaining\r\n            essentially un\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 Â· 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Thoughts on the new Coca-Cola banana ð¥¤ð flavor?\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"feedTweet\">\r\n        <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n        <div className=\"completeTweet\">\r\n          <div className=\"who\">\r\n            Juhizzz\r\n            <div className=\"accWhen\">0x42..314 Â· 1h</div>\r\n          </div>\r\n          <div className=\"tweetContent\">\r\n            Love spending time on the water ðð\r\n            <img src={canoe} className=\"tweetImg\"></img>\r\n          </div>\r\n          <div className=\"interactions\">\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n              12\r\n            </div>\r\n            <div className=\"interactionNums\">\r\n              <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}