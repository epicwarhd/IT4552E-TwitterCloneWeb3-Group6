{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport Web3 from \"web3\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis } from \"react-moralis\";\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated\n  } = useMoralis(); // const Web3Api = useMoralisWeb3Api();\n\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  const [account, setAccount] = useState();\n  const [info, setInfo] = useState();\n  useEffect(() => {\n    async function loadAccount() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const oldInfo = await contractList.methods.getProfile(accounts[0]).call();\n      console.log(oldInfo);\n    }\n\n    loadAccount();\n  }, []); // const resolveLink = (url) => {\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  // };\n  // useEffect(() => {\n  //   const fetchNFTs = async () => {\n  //     const options = {\n  //       chain: \"mumbai\",\n  //       address: account\n  //     }\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n  //     const images = mumbaiNFTs.result.map(\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\n  //     );\n  //     setPfps(images);\n  //   }\n  //   fetchNFTs();\n  // },[isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    console.log(username);\n    console.log(bio);\n\n    if (theFile) {\n      var data = theFile;\n      var file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n    }\n\n    await contractList.methods.changeProfile(username, bio, \"\", file.ipfs()).send({\n      from: account\n    });\n    window.location.reload(); // const User = Moralis.Object.extend(\"_User\");\n    // const query = new Moralis.Query(User);\n    // const myDetails = await query.first();\n    // if (bio){\n    //   myDetails.set(\"bio\", bio);\n    // }\n    // if (selectedPFP){\n    //   myDetails.set(\"pfp\", selectedPFP);\n    // }\n    // if (username){\n    //   myDetails.set(\"username\", username);\n    // }\n    // await myDetails.save();\n    // window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"0NBkJKMXRdGMH+gdO0WkWKLwwEM=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/pages/Settings.js"],"names":["React","Link","useState","useRef","useEffect","Input","Web3","defaultImgs","useMoralis","CONTRACT_ABI","CONTRACT_ADDRESS","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","web3","givenProvider","contractList","eth","Contract","account","setAccount","info","setInfo","loadAccount","accounts","requestAccounts","oldInfo","methods","getProfile","call","console","log","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","data","file","File","name","saveIPFS","changeProfile","ipfs","send","from","window","location","reload","e","value","display"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Settings.css\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Input } from \"web3uikit\";\r\nimport Web3 from \"web3\"\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\n\r\nconst Settings = () => {\r\n\r\n  const [pfps, setPfps] = useState([]);\r\n  const [selectedPFP, setSelectedPFP] = useState();\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\r\n  const [theFile, setTheFile] = useState();\r\n  const [username, setUsername] = useState();\r\n  const [bio, setBio] = useState();\r\n  const { Moralis, isAuthenticated } = useMoralis();\r\n  // const Web3Api = useMoralisWeb3Api();\r\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n  const [account, setAccount] = useState()\r\n  const [info, setInfo] = useState()\r\n\r\n  useEffect(() => {\r\n    async function loadAccount() {\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n\r\n      const oldInfo = await contractList.methods.getProfile(accounts[0]).call()\r\n      console.log(oldInfo)\r\n\r\n    }\r\n    loadAccount()\r\n    \r\n  },[])\r\n\r\n  // const resolveLink = (url) => {\r\n  //   if (!url || !url.includes(\"ipfs://\")) return url;\r\n  //   return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\r\n  // };\r\n\r\n  // useEffect(() => {\r\n\r\n  //   const fetchNFTs = async () => {\r\n  //     const options = {\r\n  //       chain: \"mumbai\",\r\n  //       address: account\r\n  //     }\r\n\r\n  //     const mumbaiNFTs = await Web3Api.account.getNFTs(options);\r\n  //     const images = mumbaiNFTs.result.map(\r\n  //       (e) => resolveLink(JSON.parse(e.metadata)?.image)\r\n  //     );\r\n  //     setPfps(images);\r\n  //   }\r\n\r\n  //   fetchNFTs();\r\n\r\n  // },[isAuthenticated, account])\r\n\r\n  const onBannerClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    \r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  const saveEdits = async () => {\r\n    console.log(username)\r\n    console.log(bio)\r\n\r\n    if (theFile) {\r\n      var data = theFile;\r\n      var file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n    }\r\n\r\n    await contractList.methods.changeProfile(username, bio, \"\", file.ipfs()).send({from: account})\r\n    window.location.reload();\r\n    // const User = Moralis.Object.extend(\"_User\");\r\n    // const query = new Moralis.Query(User);\r\n    // const myDetails = await query.first();\r\n\r\n    // if (bio){\r\n    //   myDetails.set(\"bio\", bio);\r\n    // }\r\n\r\n    // if (selectedPFP){\r\n    //   myDetails.set(\"pfp\", selectedPFP);\r\n    // }\r\n\r\n    // if (username){\r\n    //   myDetails.set(\"username\", username);\r\n    // }\r\n\r\n  \r\n\r\n    // await myDetails.save();\r\n    // window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageIdentify\">Settings</div>\r\n      <div className=\"settingsPage\">\r\n        <Input\r\n          label=\"Name\"\r\n          name=\"NameChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setUsername(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          label=\"Bio\"\r\n          name=\"bioChange\"\r\n          width=\"100%\"\r\n          labelBgColor=\"#141d26\"\r\n          onChange={(e)=> setBio(e.target.value)}\r\n        />\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n\r\n        {/* <div className=\"pfp\">\r\n          Profile Image (Your NFTs)\r\n\r\n          <div className=\"pfpOptions\">\r\n          <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n\r\n        <div className=\"pfp\">\r\n          Profile Banner\r\n          <div className=\"pfpOptions\">\r\n            <img\r\n              src={selectedFile}\r\n              onClick={onBannerClick}\r\n              className=\"banner\"\r\n            ></img>\r\n            <input\r\n              type=\"file\"\r\n              name=\"file\"\r\n              ref={inputFile}\r\n              onChange={changeHandler}\r\n              style={{ display: \"none\" }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"save\" onClick={() => saveEdits()}>\r\n          Save\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n"]},"metadata":{},"sourceType":"module"}