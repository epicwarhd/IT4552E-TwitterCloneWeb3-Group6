{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\Addbar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../pages/Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { TextArea, Icon } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport { useMoralis } from \"react-moralis\";\nimport Web3 from 'web3';\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Addbar = _ref => {\n  _s();\n\n  let {\n    retweet,\n    id\n  } = _ref;\n  const {\n    Moralis\n  } = useMoralis();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n  const [account, setAccount] = useState();\n  const [info, setInfo] = useState();\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\n  useEffect(() => {\n    async function loadAccount() {\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const info = await contractList.methods.getProfile(accounts[0]).call();\n      setInfo(info);\n    }\n\n    loadAccount();\n  }, [id]);\n\n  async function addTweet() {\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    let dateNow = new Date().toLocaleString() + '';\n    await contractList.methods.addTweet(tweet, img, dateNow).send({\n      from: account,\n      value: 2000000000000000\n    });\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: (info === null || info === void 0 ? void 0 : info[2]) !== \"\" ? info === null || info === void 0 ? void 0 : info[2] : defaultImgs[0],\n          className: \"profilePic\",\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"Retweet Comment\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: addTweet,\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"eth\",\n                  title: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Addbar, \"QYoDy5hGLyxfcvPW+Bd893ZdADM=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Addbar;\nexport default Addbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addbar\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/Addbar.js"],"names":["React","defaultImgs","TextArea","Icon","useState","useRef","useMoralis","Web3","CONTRACT_ABI","CONTRACT_ADDRESS","useEffect","Addbar","retweet","id","Moralis","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","account","setAccount","info","setInfo","web3","givenProvider","contractList","eth","Contract","loadAccount","accounts","requestAccounts","methods","getProfile","call","addTweet","img","data","file","File","name","saveIPFS","ipfs","dateNow","Date","toLocaleString","send","from","value","window","location","reload","onImageClick","current","click","changeHandler","event","target","files","URL","createObjectURL","e","display","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"../pages/Home.css\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { TextArea, Icon } from \"web3uikit\";\r\nimport { useState, useRef } from \"react\";\r\nimport { useMoralis } from \"react-moralis\";\r\nimport Web3 from 'web3';\r\nimport { CONTRACT_ABI, CONTRACT_ADDRESS } from '../config';\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nconst Addbar = ({retweet, id}) => {\r\n\r\n  const { Moralis } = useMoralis();\r\n\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const [tweet, setTweet] = useState();\r\n  const [account, setAccount] = useState();\r\n  const [info, setInfo] = useState()\r\n  const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n  const contractList = new web3.eth.Contract(CONTRACT_ABI, CONTRACT_ADDRESS);\r\n\r\n  useEffect(() => {\r\n    async function loadAccount() {\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0])\r\n\r\n      const info = await contractList.methods.getProfile(accounts[0]).call();\r\n      setInfo(info)\r\n    }\r\n    loadAccount()\r\n  }, [id])\r\n\r\n  async function addTweet() {\r\n\r\n    let img;\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      img = file.ipfs();\r\n    }else{\r\n      img = \"No Img\"\r\n    }\r\n\r\n    let dateNow = new Date().toLocaleString() + ''\r\n\r\n    await contractList.methods.addTweet(tweet, img, dateNow).send({from: account, value: 2000000000000000})\r\n    window.location.reload();\r\n  }\r\n\r\n  const onImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n      <div className=\"mainContent\">\r\n\r\n        <div className=\"profileTweet\">\r\n          <img src={info?.[2] !== \"\" ? info?.[2] : defaultImgs[0]} className=\"profilePic\" alt=\"Avatar\"></img>\r\n          <div className=\"tweetBox\">\r\n            <TextArea\r\n              label=\"\"\r\n              name=\"tweetTxtArea\"\r\n              value=\"Retweet Comment\"\r\n              type=\"text\"\r\n              onChange={(e) => setTweet(e.target.value)}\r\n              width=\"95%\"\r\n            ></TextArea>\r\n            {selectedFile && (\r\n              <img src={selectedFile} className=\"tweetImg\"></img>\r\n            )}\r\n            <div className=\"imgOrTweet\">\r\n              <div className=\"imgDiv\" onClick={onImageClick}>\r\n              <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  ref={inputFile}\r\n                  onChange={changeHandler}\r\n                  style={{ display: \"none\"}}\r\n                />\r\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n              </div>\r\n              <div className=\"tweetOptions\">\r\n                <div className=\"tweet\" onClick={addTweet} style={{ backgroundColor: \"#8247e5\" }}>\r\n                  <Icon fill=\"#ffffff\" size={20} svg=\"eth\" title=\"Tweet\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Addbar;\r\n"]},"metadata":{},"sourceType":"module"}