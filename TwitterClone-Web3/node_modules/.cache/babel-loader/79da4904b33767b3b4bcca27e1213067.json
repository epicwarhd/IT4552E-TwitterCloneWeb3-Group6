{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [tweetArr, setTweetArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  const [tweets, setTweets] = useState([]);\n  const [index, setIndex] = useState(0); // const contractProcessor = useWeb3ExecuteFunction();\n\n  const {\n    data,\n    error,\n    fetch,\n    isFetching,\n    isLoading\n  } = useWeb3ExecuteFunction();\n  let options = {\n    contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\n    functionName: \"getTweet\",\n    abi: [{\n      \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n      }],\n      \"name\": \"getTweet\",\n      \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }, {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }],\n    params: {\n      id: index\n    }\n  };\n\n  async function getTweet() {\n    // setIndex0)\n    // while(inx<2) {\n    await fetch({\n      params: options,\n      onSuccess: () => {\n        console.log(\"success\");\n      },\n      onError: () => {\n        console.log('error');\n      }\n    });\n\n    if (index !== 0 && index < 2) {\n      setTweets([...tweets, data]);\n    }\n\n    setIndex(index + 1);\n    console.log(tweets);\n    console.log(index); // }\n  }\n\n  useEffect(() => {\n    getTweet();\n  }, [tweets]); // useEffect(() => {\n  //   async function getTweets() {\n  //     try {\n  //       const Tweets = Moralis.Object.extend(\"Tweets\");\n  //       const query = new Moralis.Query(Tweets);\n  //       if (profile) {\n  //         query.equalTo(\"tweeterAcc\", account);\n  //       }\n  //       const results = await query.find();\n  //       setTweetArr(results);\n  //       // console.log(results);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   getTweets();\n  // }, [profile]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweets.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${e[2].slice(0, 4)}...${e[2].slice(38)} Â· \n                       \n                        `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [e[0], e[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e[1],\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"tLvN2RmKKQzdljoC8i9MBqWHqPU=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","useMoralis","useWeb3ExecuteFunction","useMoralisWeb3Api","useMoralisWeb3ApiCall","useEffect","useState","TweetInFeed","profile","tweetArr","setTweetArr","Moralis","account","tweets","setTweets","index","setIndex","data","error","fetch","isFetching","isLoading","options","contractAddress","functionName","abi","params","id","getTweet","onSuccess","console","log","onError","map","e","slice","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n  const [tweetArr, setTweetArr] = useState();\r\n  const { Moralis, account } = useMoralis();\r\n\r\n  const [tweets, setTweets] = useState([]);\r\n  const [index, setIndex] = useState(0)\r\n\r\n  // const contractProcessor = useWeb3ExecuteFunction();\r\n  const { data, error, fetch, isFetching, isLoading } = useWeb3ExecuteFunction();\r\n\r\n  let options = {\r\n    contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\r\n    functionName: \"getTweet\",\r\n    abi: [{\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"id\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"getTweet\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    }],\r\n    params: {\r\n      id: index,\r\n    }\r\n  }\r\n\r\n  \r\n    async function getTweet() {\r\n      // setIndex0)\r\n      // while(inx<2) {\r\n      \r\n      await fetch({\r\n        params: options,\r\n        onSuccess: () => {\r\n          console.log(\"success\")\r\n        },\r\n        onError: () => {\r\n          console.log('error')\r\n        }\r\n      })\r\n      \r\n      if(index!==0 && index<2) {\r\n        setTweets([...tweets, data])\r\n      }\r\n      \r\n      setIndex(index+1);\r\n        \r\n        \r\n      console.log(tweets)\r\n      console.log(index)\r\n      \r\n    // }\r\n  }\r\n  \r\n\r\n  useEffect(() => {\r\n    getTweet()\r\n  },[tweets])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   async function getTweets() {\r\n  //     try {\r\n  //       const Tweets = Moralis.Object.extend(\"Tweets\");\r\n  //       const query = new Moralis.Query(Tweets);\r\n  //       if (profile) {\r\n  //         query.equalTo(\"tweeterAcc\", account);\r\n  //       }\r\n  //       const results = await query.find();\r\n\r\n  //       setTweetArr(results);\r\n  //       // console.log(results);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   }\r\n  //   getTweets();\r\n  // }, [profile]);\r\n\r\n  return (\r\n    <>\r\n      {tweets.map((e) => {\r\n        return (\r\n          <>\r\n            <div className=\"feedTweet\">\r\n              <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n              <div className=\"completeTweet\">\r\n                <div className=\"who\">\r\n                \r\n                  <div className=\"accWhen\">{\r\n                        `${e[2].slice(0, 4)}...${e[2].slice(38)} Â· \r\n                       \r\n                        `  \r\n                      }\r\n                      </div>\r\n                </div>\r\n                <div className=\"tweetContent\">\r\n                {e[0]}\r\n                {e[1] && (\r\n                        <img\r\n                          src={e[1]}\r\n                          className=\"tweetImg\"\r\n                        ></img>\r\n                      )}\r\n                </div>\r\n                <div className=\"interactions\">\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                    12\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      }).reverse()}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}