{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport Web3 from 'web3';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [account, setAccount] = useState();\n  const [contactList, setContactList] = useState();\n  const [contacts, setContacts] = useState([]);\n  const CONTACT_ADDRESS = '0x1C4a347FEb5A83005fFB9a90E8714135f898EBd3';\n  const CONTACT_ABI = [{\n    \"inputs\": [],\n    \"name\": \"getCounter\",\n    \"outputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"\",\n      \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }, {\n    \"inputs\": [{\n      \"internalType\": \"uint256\",\n      \"name\": \"id\",\n      \"type\": \"uint256\"\n    }],\n    \"name\": \"getTweet\",\n    \"outputs\": [{\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"string\",\n      \"name\": \"\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"address\",\n      \"name\": \"\",\n      \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  useEffect(() => {\n    async function load() {\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const contactList = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n      setContactList(contactList);\n      const list = await contactList.methods.getTweet(0).call();\n      setContacts(contacts => [...contacts, list]);\n      const list1 = await contactList.methods.getTweet(1).call();\n      setContacts(contacts => [...contacts, list1]);\n    }\n\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: contacts.map(contact => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${contact[2].slice(0, 4)}...${contact[2].slice(38)} \n                        \n                          `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [contact[0], contact[1] && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: contact[1],\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"ONVYhUSj346i0pABFBfOag8EGcs=\");\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","Web3","useEffect","useState","TweetInFeed","profile","account","setAccount","contactList","setContactList","contacts","setContacts","CONTACT_ADDRESS","CONTACT_ABI","load","web3","givenProvider","accounts","eth","requestAccounts","Contract","list","methods","getTweet","call","list1","map","contact","slice","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport Web3 from 'web3';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n\r\n  const [account, setAccount] = useState();\r\n  const [contactList, setContactList] = useState();\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const CONTACT_ADDRESS = '0x1C4a347FEb5A83005fFB9a90E8714135f898EBd3';\r\n  const CONTACT_ABI = [\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"getCounter\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n    {\r\n      \"inputs\": [\r\n        {\r\n          \"internalType\": \"uint256\",\r\n          \"name\": \"id\",\r\n          \"type\": \"uint256\"\r\n        }\r\n      ],\r\n      \"name\": \"getTweet\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"string\",\r\n          \"name\": \"\",\r\n          \"type\": \"string\"\r\n        },\r\n        {\r\n          \"internalType\": \"address\",\r\n          \"name\": \"\",\r\n          \"type\": \"address\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0]);\r\n      const contactList = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\r\n      setContactList(contactList);\r\n\r\n      const list = await contactList.methods.getTweet(0).call();\r\n      setContacts((contacts) => [...contacts, list]);\r\n      const list1 = await contactList.methods.getTweet(1).call();\r\n      setContacts((contacts) => [...contacts, list1]);\r\n    }\r\n\r\n    load();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n\r\n      {contacts.map((contact) => {\r\n          return (\r\n            <>\r\n              <div className=\"feedTweet\">\r\n                <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n                <div className=\"completeTweet\">\r\n                  <div className=\"who\">\r\n                  \r\n                    <div className=\"accWhen\">{\r\n                          `${contact[2].slice(0, 4)}...${contact[2].slice(38)} \r\n                        \r\n                          `  \r\n                        }\r\n                        </div>\r\n                  </div>\r\n                  <div className=\"tweetContent\">\r\n                  {contact[0]}\r\n                  {contact[1] && (\r\n                          <img\r\n                            src={contact[1]}\r\n                            className=\"tweetImg\"\r\n                          ></img>\r\n                        )}\r\n                  </div>\r\n                  <div className=\"interactions\">\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                    </div>\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                      12\r\n                    </div>\r\n                    <div className=\"interactionNums\">\r\n                      <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </>\r\n          );\r\n\r\n        }\r\n      ).reverse()}\r\n        \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}