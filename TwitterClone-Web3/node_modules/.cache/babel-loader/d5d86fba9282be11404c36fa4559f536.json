{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lonel\\\\source\\\\repos\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { TextArea, Icon, Modal, Typography, Input } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport TweetInFeed from \"../components/TweetInFeed\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport PopupComment from \"../components/PopupComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [tweet, setTweet] = useState();\n\n  async function maticTweet() {\n    if (!tweet) return;\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    let options = {\n      contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\n      functionName: \"addTweet\",\n      abi: [{\n        \"inputs\": [{\n          \"internalType\": \"string\",\n          \"name\": \"tweetTxt\",\n          \"type\": \"string\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"tweetImg\",\n          \"type\": \"string\"\n        }],\n        \"name\": \"addTweet\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }],\n      params: {\n        tweetTxt: tweet,\n        tweetImg: img\n      },\n      msgValue: Moralis.Units.ETH(0.002)\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveTweet();\n      },\n      onError: error => {\n        console.log(error.data.message);\n      }\n    });\n  }\n\n  async function saveTweet() {\n    if (!tweet) return;\n    const Tweets = Moralis.Object.extend(\"Tweets\");\n    const newTweet = new Tweets();\n    newTweet.set(\"tweetTxt\", tweet);\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newTweet.set(\"tweetImg\", file.ipfs());\n    }\n\n    await newTweet.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '90vh',\n        transform: 'scale(1)',\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          cancelText: \"Discard Changes\",\n          id: \"regular\",\n          isVisible: true,\n          okText: \"Save Changes\",\n          onCancel: function noRefCheck() {},\n          onCloseButtonPressed: function noRefCheck() {},\n          onOk: function noRefCheck() {},\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              fill: \"#68738D\",\n              size: 28,\n              svg: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 70\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"#68738D\",\n              variant: \"h3\",\n              children: \"Edit Nickname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 113\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 30\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px 0 20px 0'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              label: \"Nickname\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileTweet\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            name: \"tweetTxtArea\",\n            value: \"GM World\",\n            type: \"text\",\n            onChange: e => setTweet(e.target.value),\n            width: \"95%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"tweetImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetOptions\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tweet\",\n                onClick: maticTweet,\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"eth\",\n                  title: \"Tweet\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TweetInFeed, {\n        profile: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"18+E8SMrsUCEPqeJ1+zm5hNFqLU=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/lonel/source/repos/WebProgramming-20212-Group6/TwitterClone-Web3/src/pages/Home.js"],"names":["React","defaultImgs","TextArea","Icon","Modal","Typography","Input","useState","useRef","TweetInFeed","useMoralis","useWeb3ExecuteFunction","PopupComment","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","tweet","setTweet","maticTweet","img","data","file","File","name","saveIPFS","ipfs","options","contractAddress","functionName","abi","params","tweetTxt","tweetImg","msgValue","Units","ETH","fetch","onSuccess","saveTweet","onError","error","console","log","message","Tweets","Object","extend","newTweet","set","attributes","pfp","ethAddress","username","save","window","location","reload","onImageClick","click","changeHandler","event","target","files","URL","createObjectURL","height","transform","display","justifyContent","textAlign","noRefCheck","gap","padding","e","value","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { TextArea, Icon, Modal, Typography, Input } from \"web3uikit\";\r\nimport { useState, useRef } from \"react\";\r\nimport TweetInFeed from \"../components/TweetInFeed\";\r\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\r\nimport PopupComment from \"../components/PopupComment\";\r\n\r\nconst Home = () => {\r\n\r\n  const { Moralis } = useMoralis();\r\n  const user = Moralis.User.current();\r\n  const contractProcessor = useWeb3ExecuteFunction();\r\n\r\n  const inputFile = useRef(null);\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [theFile, setTheFile] = useState();\r\n  const [tweet, setTweet] = useState();\r\n\r\n  async function maticTweet() {\r\n\r\n    if (!tweet) return;\r\n\r\n    let img;\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      img = file.ipfs();\r\n    }else{\r\n      img = \"No Img\"\r\n    }\r\n\r\n    let options = {\r\n      contractAddress: \"0x4dd88ed510486482D0d896faACb39F56C997c979\",\r\n      functionName: \"addTweet\",\r\n      abi: [{\r\n        \"inputs\": [\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"tweetTxt\",\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"internalType\": \"string\",\r\n            \"name\": \"tweetImg\",\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"name\": \"addTweet\",\r\n        \"outputs\": [],\r\n        \"stateMutability\": \"payable\",\r\n        \"type\": \"function\"\r\n      }],\r\n      params: {\r\n        tweetTxt: tweet,\r\n        tweetImg: img,\r\n      },\r\n      msgValue: Moralis.Units.ETH(0.002),\r\n    }\r\n\r\n    await contractProcessor.fetch({\r\n      params: options,\r\n      onSuccess: () => {\r\n        saveTweet();\r\n      },\r\n      onError: (error) => {\r\n        console.log(error.data.message)\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  async function saveTweet() {\r\n\r\n    if(!tweet) return;\r\n\r\n    const Tweets = Moralis.Object.extend(\"Tweets\");\r\n\r\n    const newTweet = new Tweets();\r\n\r\n    newTweet.set(\"tweetTxt\", tweet);\r\n    newTweet.set(\"tweeterPfp\", user.attributes.pfp);\r\n    newTweet.set(\"tweeterAcc\", user.attributes.ethAddress);\r\n    newTweet.set(\"tweeterUserName\", user.attributes.username);\r\n\r\n    if (theFile) {\r\n      const data = theFile;\r\n      const file = new Moralis.File(data.name, data);\r\n      await file.saveIPFS();\r\n      newTweet.set(\"tweetImg\", file.ipfs());\r\n    }\r\n\r\n    await newTweet.save();\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  const onImageClick = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const changeHandler = (event) => {\r\n    const img = event.target.files[0];\r\n    setTheFile(img);\r\n    setSelectedFile(URL.createObjectURL(img));\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <div\r\n                  style={{\r\n                    height: '90vh',\r\n                    transform: 'scale(1)',\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  <div>\r\n                    <Modal\r\n                      cancelText=\"Discard Changes\"\r\n                      id=\"regular\"\r\n                      isVisible\r\n                      okText=\"Save Changes\"\r\n                      onCancel={function noRefCheck(){}}\r\n                      onCloseButtonPressed={function noRefCheck(){}}\r\n                      onOk={function noRefCheck(){}}\r\n                      title={<div style={{display: 'flex', gap: 10}}><Icon fill=\"#68738D\" size={28} svg=\"edit\"/><Typography color=\"#68738D\" variant=\"h3\">Edit Nickname</Typography></div>}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          padding: '20px 0 20px 0'\r\n                        }}\r\n                      >\r\n                        <Input\r\n                          label=\"Nickname\"\r\n                          width=\"100%\"\r\n                        />\r\n                      </div>\r\n                    </Modal>\r\n                  </div>\r\n                </div>\r\n    <div className=\"pageIdentify\">Home</div>\r\n      <div className=\"mainContent\">\r\n        <div className=\"profileTweet\">\r\n          <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\r\n          <div className=\"tweetBox\">\r\n            <TextArea\r\n              label=\"\"\r\n              name=\"tweetTxtArea\"\r\n              value=\"GM World\"\r\n              type=\"text\"\r\n              onChange={(e) => setTweet(e.target.value)}\r\n              width=\"95%\"\r\n            ></TextArea>\r\n            {selectedFile && (\r\n              <img src={selectedFile} className=\"tweetImg\"></img>\r\n            )}\r\n            <div className=\"imgOrTweet\">\r\n              <div className=\"imgDiv\" onClick={onImageClick}>\r\n              <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  ref={inputFile}\r\n                  onChange={changeHandler}\r\n                  style={{ display: \"none\"}}\r\n                />\r\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\r\n              </div>\r\n              <div className=\"tweetOptions\">\r\n                {/* <div className=\"tweet\" onClick={saveTweet}>Tweet</div> */}\r\n                <div className=\"tweet\" onClick={maticTweet} style={{ backgroundColor: \"#8247e5\" }}>\r\n                  <Icon fill=\"#ffffff\" size={20} svg=\"eth\" title=\"Tweet\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <TweetInFeed profile={false}/>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}