{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProgramming-20212-Group6\\\\TwitterClone-Web3\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./TweetInFeed.css\";\nimport golf from \"../images/golf.png\";\nimport canoe from \"../images/canoe.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\nimport Web3 from 'web3';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  // const [tweetArr, setTweetArr] = useState();\n  // const { Moralis, account } = useMoralis();\n  // const [tweets, setTweets] = useState([]);\n  // const [index, setIndex] = useState(0)\n  const [account, setAccount] = useState();\n  const [contactList, setContactList] = useState();\n  const [contacts, setContacts] = useState([]); // const contrtProceor = useWeb3ExecuteFunction();\n  // const { data, error, fetch, isFetching, isLoading } = useWeb3ExecuteFunction();\n  // let options = {\n  //   contractAddress: \"0xb6Ec024fc3D6Be210ddE16A0911f1e408c5772F7\",\n  //   functionName: \"getListTweet\",\n  //   abi: [{\n  //     \"inputs\": [],\n  //     \"name\": \"getListTweet\",\n  //     \"outputs\": [\n  //       {\n  //         \"internalType\": \"string[]\",\n  //         \"name\": \"\",\n  //         \"type\": \"string[]\"\n  //       },\n  //       {\n  //         \"internalType\": \"string[]\",\n  //         \"name\": \"\",\n  //         \"type\": \"string[]\"\n  //       },\n  //       {\n  //         \"internalType\": \"address[]\",\n  //         \"name\": \"\",\n  //         \"type\": \"address[]\"\n  //       }\n  //     ],\n  //     \"stateMutability\": \"view\",\n  //     \"type\": \"function\"\n  //   }]\n  // }\n  //   async function getTweet() {\n  //     // nx0)\n  //     // wlex) {\n  //       console.log(options)\n  //     await fetch({\n  //       params: options,\n  //       onSuccess: () => {\n  //         console.log(\"success\")\n  //         setTweets(data)\n  //       },\n  //       onError: () => {\n  //         console.log('error')\n  //       }\n  //     })\n  // }\n  // useEffect(() => {\n  //   getTweet()\n  //   console.log(tweets)\n  // },[])\n  // useEffect(() => {\n  //   async function getTweets() {\n  //     try {\n  //       const Tweets = Moralis.Object.extend(\"Tweets\");\n  //       const query = new Moralis.Query(Tweets);\n  //       if (profile) {\n  //         query.equalTo(\"tweeterAcc\", account);\n  //       }\n  //       const results = await query.find();\n  //       setTweetArr(results);\n  //       // console.log(results);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   }\n  //   getTweets();\n  // }, [profile]);\n\n  const CONTACT_ADDRESS = '0xb6Ec024fc3D6Be210ddE16A0911f1e408c5772F7';\n  const CONTACT_ABI = [{\n    \"inputs\": [],\n    \"name\": \"getListTweet\",\n    \"outputs\": [{\n      \"internalType\": \"string[]\",\n      \"name\": \"\",\n      \"type\": \"string[]\"\n    }, {\n      \"internalType\": \"string[]\",\n      \"name\": \"\",\n      \"type\": \"string[]\"\n    }, {\n      \"internalType\": \"address[]\",\n      \"name\": \"\",\n      \"type\": \"address[]\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }];\n  useEffect(() => {\n    async function load() {\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\n      const accounts = await web3.eth.requestAccounts();\n      setAccount(accounts[0]);\n      const contactList = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\n      setContactList(contactList);\n      const list = await contactList.methods.getListTweet().call();\n      setContacts(list);\n    }\n\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"ONVYhUSj346i0pABFBfOag8EGcs=\");\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["D:/WebProgramming-20212-Group6/TwitterClone-Web3/src/components/TweetInFeed.js"],"names":["React","golf","canoe","defaultImgs","Icon","useMoralis","useWeb3ExecuteFunction","useMoralisWeb3Api","useMoralisWeb3ApiCall","Web3","useEffect","useState","TweetInFeed","profile","account","setAccount","contactList","setContactList","contacts","setContacts","CONTACT_ADDRESS","CONTACT_ABI","load","web3","givenProvider","accounts","eth","requestAccounts","Contract","list","methods","getListTweet","call"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,SAASC,UAAT,EAAqBC,sBAArB,EAA6CC,iBAA7C,EAAgEC,qBAAhE,QAA6F,eAA7F;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,MAAMC,WAAW,GAAG,QAAiB;AAAA;;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACnC;AACA;AAEA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,EAA9C;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC,CATmC,CAWnC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,eAAe,GAAG,4CAAxB;AACA,QAAMC,WAAW,GAAG,CAClB;AACE,cAAU,EADZ;AAEE,YAAQ,cAFV;AAGE,eAAW,CACT;AACE,sBAAgB,UADlB;AAEE,cAAQ,EAFV;AAGE,cAAQ;AAHV,KADS,EAMT;AACE,sBAAgB,UADlB;AAEE,cAAQ,EAFV;AAGE,cAAQ;AAHV,KANS,EAWT;AACE,sBAAgB,WADlB;AAEE,cAAQ,EAFV;AAGE,cAAQ;AAHV,KAXS,CAHb;AAoBE,uBAAmB,MApBrB;AAqBE,YAAQ;AArBV,GADkB,CAApB;AA0BAX,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,IAAf,GAAsB;AACpB,YAAMC,IAAI,GAAG,IAAId,IAAJ,CAASA,IAAI,CAACe,aAAL,IAAsB,uBAA/B,CAAb;AACA,YAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,eAAT,EAAvB;AACAZ,MAAAA,UAAU,CAACU,QAAQ,CAAC,CAAD,CAAT,CAAV;AACA,YAAMT,WAAW,GAAG,IAAIO,IAAI,CAACG,GAAL,CAASE,QAAb,CAAsBP,WAAtB,EAAmCD,eAAnC,CAApB;AACAH,MAAAA,cAAc,CAACD,WAAD,CAAd;AAEA,YAAMa,IAAI,GAAG,MAAMb,WAAW,CAACc,OAAZ,CAAoBC,YAApB,GAAmCC,IAAnC,EAAnB;AACAb,MAAAA,WAAW,CAACU,IAAD,CAAX;AACD;;AAEDP,IAAAA,IAAI;AACL,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,2BACE;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA+CD,CAnLD;;GAAMF,W;;KAAAA,W;AAqLN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport \"./TweetInFeed.css\";\r\nimport golf from \"../images/golf.png\";\r\nimport canoe from \"../images/canoe.png\";\r\nimport { defaultImgs } from \"../defaultimgs\";\r\nimport { Icon } from \"web3uikit\";\r\nimport { useMoralis, useWeb3ExecuteFunction, useMoralisWeb3Api, useMoralisWeb3ApiCall } from \"react-moralis\";\r\nimport Web3 from 'web3';\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst TweetInFeed = ({ profile }) => {\r\n  // const [tweetArr, setTweetArr] = useState();\r\n  // const { Moralis, account } = useMoralis();\r\n\r\n  // const [tweets, setTweets] = useState([]);\r\n  // const [index, setIndex] = useState(0)\r\n\r\n  const [account, setAccount] = useState();\r\n  const [contactList, setContactList] = useState();\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  // const contrtProceor = useWeb3ExecuteFunction();\r\n  // const { data, error, fetch, isFetching, isLoading } = useWeb3ExecuteFunction();\r\n\r\n  // let options = {\r\n  //   contractAddress: \"0xb6Ec024fc3D6Be210ddE16A0911f1e408c5772F7\",\r\n  //   functionName: \"getListTweet\",\r\n  //   abi: [{\r\n  //     \"inputs\": [],\r\n  //     \"name\": \"getListTweet\",\r\n  //     \"outputs\": [\r\n  //       {\r\n  //         \"internalType\": \"string[]\",\r\n  //         \"name\": \"\",\r\n  //         \"type\": \"string[]\"\r\n  //       },\r\n  //       {\r\n  //         \"internalType\": \"string[]\",\r\n  //         \"name\": \"\",\r\n  //         \"type\": \"string[]\"\r\n  //       },\r\n  //       {\r\n  //         \"internalType\": \"address[]\",\r\n  //         \"name\": \"\",\r\n  //         \"type\": \"address[]\"\r\n  //       }\r\n  //     ],\r\n  //     \"stateMutability\": \"view\",\r\n  //     \"type\": \"function\"\r\n  //   }]\r\n  // }\r\n\r\n  \r\n  //   async function getTweet() {\r\n  //     // nx0)\r\n  //     // wlex) {\r\n  //       console.log(options)\r\n  //     await fetch({\r\n  //       params: options,\r\n  //       onSuccess: () => {\r\n  //         console.log(\"success\")\r\n  //         setTweets(data)\r\n  //       },\r\n  //       onError: () => {\r\n  //         console.log('error')\r\n  //       }\r\n  //     })\r\n      \r\n      \r\n        \r\n      \r\n      \r\n  // }\r\n\r\n\r\n  // useEffect(() => {\r\n  //   getTweet()\r\n  //   console.log(tweets)\r\n  // },[])\r\n\r\n\r\n  // useEffect(() => {\r\n  //   async function getTweets() {\r\n  //     try {\r\n  //       const Tweets = Moralis.Object.extend(\"Tweets\");\r\n  //       const query = new Moralis.Query(Tweets);\r\n  //       if (profile) {\r\n  //         query.equalTo(\"tweeterAcc\", account);\r\n  //       }\r\n  //       const results = await query.find();\r\n\r\n  //       setTweetArr(results);\r\n  //       // console.log(results);\r\n  //     } catch (error) {\r\n  //       console.error(error);\r\n  //     }\r\n  //   }\r\n  //   getTweets();\r\n  // }, [profile]);\r\n\r\n  const CONTACT_ADDRESS = '0xb6Ec024fc3D6Be210ddE16A0911f1e408c5772F7';\r\n  const CONTACT_ABI = [\r\n    {\r\n      \"inputs\": [],\r\n      \"name\": \"getListTweet\",\r\n      \"outputs\": [\r\n        {\r\n          \"internalType\": \"string[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"string[]\"\r\n        },\r\n        {\r\n          \"internalType\": \"string[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"string[]\"\r\n        },\r\n        {\r\n          \"internalType\": \"address[]\",\r\n          \"name\": \"\",\r\n          \"type\": \"address[]\"\r\n        }\r\n      ],\r\n      \"stateMutability\": \"view\",\r\n      \"type\": \"function\"\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    async function load() {\r\n      const web3 = new Web3(Web3.givenProvider || 'http://localhost:3000');\r\n      const accounts = await web3.eth.requestAccounts();\r\n      setAccount(accounts[0]);\r\n      const contactList = new web3.eth.Contract(CONTACT_ABI, CONTACT_ADDRESS);\r\n      setContactList(contactList);\r\n\r\n      const list = await contactList.methods.getListTweet().call();\r\n      setContacts(list);\r\n    }\r\n\r\n    load();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <h1>{account}</h1>\r\n\r\n      \r\n        \r\n          {/* <>\r\n            <div className=\"feedTweet\">\r\n              <img src={defaultImgs[0]} className=\"profilePic\"></img>\r\n              <div className=\"completeTweet\">\r\n                <div className=\"who\">\r\n                \r\n                  <div className=\"accWhen\">{\r\n                        `${tweets[2][0].slice(0, 4)}...${tweets[2][0].slice(38)} · \r\n                       \r\n                        `  \r\n                      }\r\n                      </div>\r\n                </div>\r\n                <div className=\"tweetContent\">\r\n                {tweets[0][0]}\r\n                {tweets[1][0] && (\r\n                        <img\r\n                          src={tweets[1][0]}\r\n                          className=\"tweetImg\"\r\n                        ></img>\r\n                      )}\r\n                </div>\r\n                <div className=\"interactions\">\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\r\n                    12\r\n                  </div>\r\n                  <div className=\"interactionNums\">\r\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </> */}\r\n        \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetInFeed;\r\n"]},"metadata":{},"sourceType":"module"}